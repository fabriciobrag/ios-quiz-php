
[{"comment": "", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": "a Lotus ", "id": 49, "question_id": 1}, {"is_correct": false, "alternative": "Lotus", "id": 50, "question_id": 1}, {"is_correct": false, "alternative": "y Marigol", "id": 51, "question_id": 1}, {"is_correct": true, "alternative": "Marigold", "id": 52, "question_id": 1}], "created_at": {"$date": 1394246929000}, "question": "Consider the following code snippet and predict the output:\r\n[code]\r\n<?php\r\n    echo \"play along\"[4].\" \";\r\n    echo [\"Rose\", \"Lotus\", \"Marigold\", \"Sunflower\"][2];\r\n?>\r\n[/code]", "id": 1, "id_google": 1256, "answer": null, "type_question": 1}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "Includes constructs cause a fatal error if the file doesn't exist", "id": 37, "question_id": 2}, {"is_correct": false, "alternative": "There is no difference other than the name ", "id": 38, "question_id": 2}, {"is_correct": false, "alternative": "Include constructs are processed at run time; require constructs are processed at compile time", "id": 39, "question_id": 2}, {"is_correct": true, "alternative": "Require constructs cause a fatal error if the file can't be read ", "id": 40, "question_id": 2}], "created_at": {"$date": 1394247254000}, "question": "What is the difference between the include and require language constructs? \r\n", "id": 2, "id_google": 1293, "answer": null, "type_question": 1}, {"comment": "  ", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": "1", "id": 77, "question_id": 3}, {"is_correct": false, "alternative": "3", "id": 78, "question_id": 3}, {"is_correct": true, "alternative": "5", "id": 79, "question_id": 3}, {"is_correct": false, "alternative": "9", "id": 80, "question_id": 3}], "created_at": {"$date": 1394247339000}, "question": "What will the following code print ?\r\n[code]\r\n<?php\r\n    echo  1 + 2 * \"0x02\";\r\n?>\r\n[/code]", "id": 3, "id_google": 1299, "answer": null, "type_question": 1}, {"comment": " ", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "33322", "id": 53, "question_id": 4}, {"is_correct": true, "alternative": "22333", "id": 54, "question_id": 4}, {"is_correct": false, "alternative": "22233", "id": 55, "question_id": 4}, {"is_correct": false, "alternative": "33222", "id": 56, "question_id": 4}], "created_at": {"$date": 1394248921000}, "question": "What is the result of the following code snippet ?\r\n[code]\r\n<?php\r\n$f = function($x) {\r\n    return function ($y) use ($x) {\r\n        return str_repeat($x, $y);\r\n    };\r\n};\r\n\r\n$a = $f(2);\r\n$b = $f(3);\r\n$c = $a(2) . $b(3);\r\necho ($c);\r\n?>\r\n[/code]", "id": 4, "id_google": 1298, "answer": null, "type_question": 1}, {"comment": "  ", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "Notice: Use of undefined constant var - assumed 'var'", "id": 117, "question_id": 5}, {"is_correct": true, "alternative": "Parse error: syntax error, unexpected '{'", "id": 118, "question_id": 5}, {"is_correct": false, "alternative": "var", "id": 119, "question_id": 5}, {"is_correct": false, "alternative": "Syntax error: syntax error, unexpected '{'", "id": 120, "question_id": 5}], "created_at": {"$date": 1395784194000}, "question": "What will be printed?\r\n[code]\r\n<?php\r\n$var = 'var';\r\necho \"${$var[0].$var[1].$var[2]}\";\r\n[/code]", "id": 5, "id_google": 0, "answer": null, "type_question": 1}, {"comment": "   ", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "42", "id": 129, "question_id": 6}, {"is_correct": true, "alternative": "2", "id": 130, "question_id": 6}, {"is_correct": false, "alternative": "Fatal Error: Cannot access private property foo::$value", "id": 131, "question_id": 6}, {"is_correct": false, "alternative": "Fatal Error: Cannot provide by reference private property foo::$value", "id": 132, "question_id": 6}], "created_at": {"$date": 1395784556000}, "question": "Choose the correctly answer.\r\n[code]\r\n<?php\r\nclass foo {\r\n        private $value = 42; \r\n    \r\n        public function &getValue() {\r\n              return $this->value;\r\n        }   \r\n}   \r\n\r\n$obj = new foo;\r\n$myValue = &$obj->getValue(); \r\n$myValue = 2;\r\necho $obj->getValue(); \r\n[/code]", "id": 6, "id_google": 1308, "answer": null, "type_question": 1}, {"comment": "  ", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "0", "id": 121, "question_id": 7}, {"is_correct": false, "alternative": "1", "id": 122, "question_id": 7}, {"is_correct": false, "alternative": "2", "id": 123, "question_id": 7}, {"is_correct": true, "alternative": "3", "id": 124, "question_id": 7}], "created_at": {"$date": 1395784685000}, "question": "What's is the result?\r\n[code]\r\n<?php\r\nclass Numbers {\r\n    public $a = 1;\r\n    public static $b = 2;\r\n}\r\n\r\n$Numbers = new Numbers();\r\n\r\n$a = &$Numbers->a;\r\n$b = &Numbers::$b;\r\n\r\nunset($Numbers);\r\n\r\necho $a + $b; \r\n[/code]", "id": 7, "id_google": 1313, "answer": null, "type_question": 1}, {"comment": "   ", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "Notice: Use of undefined constant a - assumed 'a'", "id": 125, "question_id": 8}, {"is_correct": false, "alternative": "Parse error: syntax error, unexpected '{'", "id": 126, "question_id": 8}, {"is_correct": true, "alternative": "a", "id": 127, "question_id": 8}, {"is_correct": false, "alternative": "Syntax error: syntax error, unexpected '{'", "id": 128, "question_id": 8}], "created_at": {"$date": 1395784849000}, "question": "Chose the true answer.\r\n[code]\r\n<?php\r\n$a = \"a\";\r\n$abc = @$abc = \"${${${a}}}\";\r\n\r\necho $abc;\r\n[/code]", "id": 8, "id_google": 0, "answer": null, "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [], "created_at": {"$date": 1397185002000}, "question": "What will be the output of this script?\r\n[code]\r\n<?php\r\necho \"0\" ? false : true;\r\n?>\r\n[/code]", "id": 19, "id_google": 1318, "answer": "1", "type_question": 2}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "name", "id": 140, "question_id": 20}, {"is_correct": true, "alternative": "extension", "id": 141, "question_id": 20}, {"is_correct": false, "alternative": "type", "id": 142, "question_id": 20}, {"is_correct": false, "alternative": "size", "id": 143, "question_id": 20}, {"is_correct": false, "alternative": "error", "id": 144, "question_id": 20}, {"is_correct": false, "alternative": "tmp_name", "id": 145, "question_id": 20}, {"is_correct": true, "alternative": "path_to_file", "id": 146, "question_id": 20}], "created_at": {"$date": 1397765283000}, "question": "Which of the following will NOT be a key of $_FILES[$filename] when we upload a file?", "id": 20, "id_google": 1326, "answer": "", "type_question": 3}, {"comment": "", "id_category": 5, "alternatives": [{"is_correct": false, "alternative": "To validate XML using WCAG rules", "id": 147, "question_id": 21}, {"is_correct": false, "alternative": "For XML transformations", "id": 148, "question_id": 21}, {"is_correct": false, "alternative": "To generate XML from a CSV file", "id": 149, "question_id": 21}, {"is_correct": true, "alternative": "To apply CSS to an XML in order to generate an XHTML page", "id": 150, "question_id": 21}], "created_at": {"$date": 1398716958000}, "question": "What do we use the XSL extension for?", "id": 21, "id_google": 1351, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 5, "alternatives": [{"is_correct": true, "alternative": "$xmlObj->movie->addChild(\"actor\", \"You\");", "id": 263, "question_id": 23}, {"is_correct": false, "alternative": "$xmlObj->addChild(new SimpleXMLElement(\"actor\", \"You\"));", "id": 264, "question_id": 23}, {"is_correct": false, "alternative": "$xmlObj->movie[0]->addChild(\"actor\", \"You\");", "id": 265, "question_id": 23}, {"is_correct": false, "alternative": "$xmlObj->xpath(new SimpleXMLElement(\"actor\", \"You\"));", "id": 266, "question_id": 23}, {"is_correct": false, "alternative": "$xmlObj->addChild(\"actor\", \"You\");", "id": 267, "question_id": 23}, {"is_correct": false, "alternative": "$xmlObj->movie[0]->addChild(new SimpleXMLElement(\"actor\", \"You\"));", "id": 268, "question_id": 23}], "created_at": {"$date": 1398717394000}, "question": "If we want to add an actor \"You\" to the movie, what would be the correct instruction?\r\n[code]\r\n<?php\r\n$xmlstr = <<<XML\r\n<?xml version='1.0'?>\r\n<movie>\r\n    <title>PHP Exam: The Saga</title>\r\n    <actor>Me</actor>\r\n</movie>\r\nXML;\r\n\r\n$xmlObj = simplexml_load_string($xmlstr);\r\n\r\n????????\r\n\r\necho $xmlObj->asXML();\r\n?>\r\n[/code]", "id": 23, "id_google": 1350, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "a fatal error", "id": 163, "question_id": 24}, {"is_correct": false, "alternative": "Cyrille Cyrille", "id": 164, "question_id": 24}, {"is_correct": false, "alternative": "a warning", "id": 165, "question_id": 24}, {"is_correct": false, "alternative": "Joe Joe", "id": 166, "question_id": 24}, {"is_correct": true, "alternative": "Cyrille Joe", "id": 167, "question_id": 24}], "created_at": {"$date": 1398717469000}, "question": "What will be displayed with the code below ?\r\n[code]\r\n<?php\r\nclass Test {\r\n    public $name = 'Cyrille';\r\n\r\n    public function setName ($sName) {\r\n        $this->name = $sName;\r\n    }\r\n}\r\n\r\n$obj1 = new Test();\r\n$obj2 = new $obj1;\r\n$obj1->setName('Joe');\r\n\r\necho $obj2->name . ' ' . $obj1->name;\r\n[/code]", "id": 24, "id_google": 1339, "answer": "", "type_question": 1}, {"comment": "", "id_category": 5, "alternatives": [{"is_correct": false, "alternative": "SAX", "id": 168, "question_id": 25}, {"is_correct": true, "alternative": "FastDOM", "id": 169, "question_id": 25}, {"is_correct": true, "alternative": "DOM", "id": 170, "question_id": 25}, {"is_correct": true, "alternative": "XPath", "id": 171, "question_id": 25}, {"is_correct": true, "alternative": "XML to Object mapping", "id": 172, "question_id": 25}], "created_at": {"$date": 1398717562000}, "question": "PHP 5 supports which of the following XML parsing methods?", "id": 25, "id_google": 1349, "answer": "", "type_question": 3}, {"comment": "", "id_category": 5, "alternatives": [{"is_correct": false, "alternative": "We can't parse an HTML using an XML parser, because the document might be not well-formed. ", "id": 173, "question_id": 26}, {"is_correct": true, "alternative": "DOMDocument::loadHTMLFile('filename.html') ", "id": 174, "question_id": 26}, {"is_correct": false, "alternative": "DOMDocument::loadFromHTML(htmlentities(file_get_contents('filename.html'))) ", "id": 175, "question_id": 26}, {"is_correct": false, "alternative": "simple_xml_load_html('filename.html') ", "id": 176, "question_id": 26}, {"is_correct": true, "alternative": "DOMDocument::loadHTML(file_get_contents('filename.html')) ", "id": 177, "question_id": 26}, {"is_correct": false, "alternative": "new SimpleXMLElement(file_get_contents('filename.html')) ", "id": 178, "question_id": 26}, {"is_correct": false, "alternative": "We can't parse an HTML using an XML parser, because of the DTD ", "id": 179, "question_id": 26}], "created_at": {"$date": 1398717694000}, "question": "How would we parse an HTML file using an XML parser?", "id": 26, "id_google": 1348, "answer": "", "type_question": 3}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "extension", "id": 180, "question_id": 27}, {"is_correct": false, "alternative": "zend_extension", "id": 181, "question_id": 27}, {"is_correct": false, "alternative": "dl", "id": 182, "question_id": 27}, {"is_correct": false, "alternative": "extension_ts", "id": 183, "question_id": 27}, {"is_correct": false, "alternative": "zend_extension_ts", "id": 184, "question_id": 27}], "created_at": {"$date": 1398717762000}, "question": "Which directive should you use in the php.ini to add the new opcache's extension?", "id": 27, "id_google": 1160, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "display_errors = off ", "id": 185, "question_id": 28}, {"is_correct": true, "alternative": " log_errors = on ", "id": 186, "question_id": 28}, {"is_correct": false, "alternative": "allow_url_include = on ", "id": 187, "question_id": 28}, {"is_correct": false, "alternative": "error_reporting = E_ALL | E_NOTICE | E_STRICT | E_DEPRECATED ", "id": 188, "question_id": 28}, {"is_correct": true, "alternative": "error_reporting = E_ALL | E_STRICT ", "id": 189, "question_id": 28}], "created_at": {"$date": 1398717848000}, "question": "What are the recommended settings for production environments? ", "id": 28, "id_google": 1346, "answer": "", "type_question": 3}, {"comment": "http://www.php.net/manual/en/class.datetime.php", "id_category": 6, "alternatives": [{"is_correct": true, "alternative": "ATOM", "id": 190, "question_id": 29}, {"is_correct": true, "alternative": "ISO8601", "id": 191, "question_id": 29}, {"is_correct": false, "alternative": "LOCALE", "id": 192, "question_id": 29}, {"is_correct": true, "alternative": "COOKIE", "id": 193, "question_id": 29}, {"is_correct": false, "alternative": "ISO8859-1", "id": 194, "question_id": 29}, {"is_correct": false, "alternative": "UTF8", "id": 195, "question_id": 29}], "created_at": {"$date": 1398717970000}, "question": "Which of the following are valid DateTime constants?", "id": 29, "id_google": 1347, "answer": "", "type_question": 3}, {"comment": "", "id_category": 8, "alternatives": [{"is_correct": false, "alternative": "Use a black list ", "id": 196, "question_id": 30}, {"is_correct": false, "alternative": "Relay on addslashes ", "id": 197, "question_id": 30}, {"is_correct": true, "alternative": "Use mysqli_real_escape_string ", "id": 198, "question_id": 30}, {"is_correct": false, "alternative": "Always code SQL carefully ", "id": 199, "question_id": 30}, {"is_correct": true, "alternative": "When possible use prepared statements ", "id": 200, "question_id": 30}], "created_at": {"$date": 1398718038000}, "question": "Which of the following are good measures against SQL injection? ", "id": 30, "id_google": 1345, "answer": "", "type_question": 3}, {"comment": "", "id_category": 8, "alternatives": [{"is_correct": true, "alternative": "set session.use_only_cookies to on", "id": 201, "question_id": 31}, {"is_correct": false, "alternative": "forbid the use of cookies", "id": 202, "question_id": 31}, {"is_correct": false, "alternative": "set html_errors to off", "id": 203, "question_id": 31}, {"is_correct": false, "alternative": "set exit_on_timeout to on", "id": 204, "question_id": 31}, {"is_correct": false, "alternative": "set session.use_trans_sid to on", "id": 205, "question_id": 31}], "created_at": {"$date": 1398718091000}, "question": "What can you do to prevent session fixation?", "id": 31, "id_google": 1344, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "It always makes use of .ini files", "id": 206, "question_id": 32}, {"is_correct": true, "alternative": "It implements the singleton pattern", "id": 207, "question_id": 32}, {"is_correct": true, "alternative": "Can provide access to different sort of objects", "id": 208, "question_id": 32}, {"is_correct": false, "alternative": "It does manage your database pooling", "id": 209, "question_id": 32}, {"is_correct": false, "alternative": "Almost always it's stored in the session", "id": 210, "question_id": 32}], "created_at": {"$date": 1398718160000}, "question": "The registry pattern characteristics are:", "id": 32, "id_google": 1343, "answer": "", "type_question": 3}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "Always objects are passed by reference in PHP5 ", "id": 211, "question_id": 33}, {"is_correct": false, "alternative": "When the calling code precedes the variable name with a & ", "id": 212, "question_id": 33}, {"is_correct": false, "alternative": "Never objects are cloned when passed to a function ", "id": 213, "question_id": 33}, {"is_correct": false, "alternative": "When the function parameter listing preceeds the variable name with a & ", "id": 214, "question_id": 33}], "created_at": {"$date": 1398718241000}, "question": "In PHP5 objects are passed by reference to a function when (Select the answer that is the most correct):", "id": 33, "id_google": 1341, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [], "created_at": {"$date": 1398718271000}, "question": "The ____________ pattern ensure that only one instance of a class is created. ", "id": 34, "id_google": 1340, "answer": "singleton", "type_question": 2}, {"comment": "", "id_category": 4, "alternatives": [], "created_at": {"$date": 1398718310000}, "question": "The _________ pattern is extremely useful for creating objects which watch the state of other objects and respond to those changes.", "id": 35, "id_google": 1342, "answer": "observer", "type_question": 2}, {"comment": "", "id_category": 4, "alternatives": [], "created_at": {"$date": 1398718382000}, "question": "What would be the output of the following script?\r\n[code]\r\n<?php\r\ninterface i1 {}\r\ninterface i2 extends i1 {}\r\ninterface i3 {}\r\nclass c1 {}\r\nclass c2 extends c1 {}\r\nclass c3 extends c2 implements i2, i3 {}\r\n$c3 = new C3();\r\n\r\necho $c3 instanceof c1;\r\necho $c3 instanceof c2;\r\necho $c3 instanceof c3;\r\necho $c3 instanceof i1;\r\necho $c3 instanceof i2;\r\necho $c3 instanceof i3;\r\n?>\r\n[/code]\r\n___________ (open field)", "id": 36, "id_google": 1337, "answer": "111111", "type_question": 2}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": true, "alternative": "Prevent class inheritance ", "id": 215, "question_id": 37}, {"is_correct": true, "alternative": "Prevent method overriding or redefinition of method in subclass ", "id": 216, "question_id": 37}, {"is_correct": false, "alternative": "Declare class constants ", "id": 217, "question_id": 37}, {"is_correct": false, "alternative": "All of above ", "id": 218, "question_id": 37}], "created_at": {"$date": 1398718426000}, "question": "What are the uses of the keyword \"final\"? ", "id": 37, "id_google": 1335, "answer": "", "type_question": 3}, {"comment": "", "id_category": 4, "alternatives": [], "created_at": {"$date": 1398718482000}, "question": "What will be printed? \r\n[code]\r\n<?php \r\nclass Vehicle { \r\n    const topSpeed = 100; \r\n    \r\n    function getTopSpeed(){ \r\n        return self::topSpeed; \r\n    } \r\n    function maxSpeed(){ \r\n        return 100; \r\n    } \r\n} \r\n\r\nclass Motorcycle extends Vehicle { \r\n    const topSpeed = 150; \r\n    function maxSpeed() { \r\n        return $this->getTopSpeed(); \r\n    } \r\n} \r\n\r\n$aspira = new Motorcycle(); \r\necho $aspira->getTopSpeed(); \r\n?> \r\n[/code]\r\n_______ (campo aberto) ", "id": 38, "id_google": 1338, "answer": "100", "type_question": 2}, {"comment": "http://www.php.net/manual/en/wrappers.php", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "http://", "id": 219, "question_id": 39}, {"is_correct": true, "alternative": "php://", "id": 220, "question_id": 39}, {"is_correct": false, "alternative": "zip://", "id": 221, "question_id": 39}, {"is_correct": true, "alternative": "phar://", "id": 222, "question_id": 39}, {"is_correct": true, "alternative": "composer://", "id": 223, "question_id": 39}, {"is_correct": false, "alternative": "data://", "id": 224, "question_id": 39}, {"is_correct": false, "alternative": "ssh://", "id": 225, "question_id": 39}], "created_at": {"$date": 1398718691000}, "question": "Which of the following protocols are supported by PHP (by default) ?", "id": 39, "id_google": 1335, "answer": "", "type_question": 3}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": true, "alternative": "Shallow", "id": 226, "question_id": 40}, {"is_correct": false, "alternative": "Deep", "id": 227, "question_id": 40}], "created_at": {"$date": 1398718777000}, "question": "What kind of copy does \"clone\" create?", "id": 40, "id_google": 1336, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "2", "id": 228, "question_id": 41}, {"is_correct": false, "alternative": "12", "id": 229, "question_id": 41}, {"is_correct": false, "alternative": "22", "id": 230, "question_id": 41}, {"is_correct": true, "alternative": "Fatal error", "id": 231, "question_id": 41}], "created_at": {"$date": 1398718833000}, "question": "What will be the output of this script? \r\n[code]\r\n<?php \r\nclass A { \r\n    final function a() { \r\n        echo 1; \r\n    } \r\n} \r\nclass B extends A { \r\n    public function a() { \r\n        echo 2; \r\n    } \r\n} \r\n\r\n$a = new B(); \r\necho $a->a(); \r\n?> \r\n[/code]", "id": 41, "id_google": 1334, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "01", "id": 232, "question_id": 42}, {"is_correct": false, "alternative": "00", "id": 233, "question_id": 42}, {"is_correct": false, "alternative": "0", "id": 234, "question_id": 42}, {"is_correct": false, "alternative": "1", "id": 235, "question_id": 42}, {"is_correct": false, "alternative": "2", "id": 236, "question_id": 42}, {"is_correct": false, "alternative": "11", "id": 237, "question_id": 42}, {"is_correct": true, "alternative": "012", "id": 238, "question_id": 42}, {"is_correct": false, "alternative": "An error will be throw", "id": 239, "question_id": 42}], "created_at": {"$date": 1398718994000}, "question": "What will be printed when this script is executed?\r\n[code]\r\n<?php\r\nclass Test {\r\n    protected $count = 0;\r\n    \r\n    function construct() {\r\n        echo $this->count;\r\n    }\r\n    function test(){\r\n        echo $this->count++;\r\n    }\r\n    function show(){\r\n        echo $this->count;\r\n    }\r\n}\r\n$testObj = new Test();\r\n$testObj->test();\r\n$testObj->show();\r\n?>\r\n[/code]", "id": 42, "id_google": 1331, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "Yes, you have to call a static method using ::", "id": 240, "question_id": 43}, {"is_correct": false, "alternative": "Yes, you method access on instantiation is not available in PHP 5.5", "id": 241, "question_id": 43}, {"is_correct": false, "alternative": "No, it will throw an exception instead", "id": 242, "question_id": 43}, {"is_correct": true, "alternative": "No, this code works flawlessly", "id": 243, "question_id": 43}], "created_at": {"$date": 1398719105000}, "question": "Will the following code print an error?\r\n[code]\r\n<?php\r\nclass A {\r\n    public static function test() {\r\n        echo \"ok!\";\r\n    }\r\n}\r\n(new A())->test();\r\n?>\r\n[/code]", "id": 43, "id_google": 1332, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 8, "alternatives": [{"is_correct": true, "alternative": "md5", "id": 258, "question_id": 44}, {"is_correct": false, "alternative": "sha1", "id": 259, "question_id": 44}, {"is_correct": false, "alternative": "RSA", "id": 260, "question_id": 44}, {"is_correct": false, "alternative": "none", "id": 261, "question_id": 44}, {"is_correct": false, "alternative": "NSA", "id": 262, "question_id": 44}], "created_at": {"$date": 1398719206000}, "question": "In HTTP Basic Authentication, what algorithm is applied to the password to protect it?", "id": 44, "id_google": 1323, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "call_user_func(my_callback_function())", "id": 249, "question_id": 45}, {"is_correct": true, "alternative": "call_user_func(\"my_callback_function\")", "id": 250, "question_id": 45}, {"is_correct": true, "alternative": "call_user_func(\"my_callback_function\", $arguments)", "id": 251, "question_id": 45}, {"is_correct": true, "alternative": "call_user_func(array(\"MyClass\",\"myCallbackMethod\"))", "id": 252, "question_id": 45}, {"is_correct": true, "alternative": "call_user_func(array(\"my_callback_function\", $arguments))", "id": 253, "question_id": 45}, {"is_correct": false, "alternative": "call_user_func(array(\"MyClass\",\"my_callback_function\",$arguments))", "id": 254, "question_id": 45}, {"is_correct": false, "alternative": " call_user_func(\"MyClass::myCallbackMethod\")", "id": 255, "question_id": 45}, {"is_correct": false, "alternative": "call_user_func(function() { ... } )", "id": 256, "question_id": 45}, {"is_correct": false, "alternative": "A closure", "id": 257, "question_id": 45}], "created_at": {"$date": 1398719366000}, "question": "Which ones are accepted callbacks?", "id": 45, "id_google": 1319, "answer": "", "type_question": 3}, {"comment": "  ", "id_category": 9, "alternatives": [{"is_correct": true, "alternative": "An array containing: PHP5", "id": 285, "question_id": 46}, {"is_correct": false, "alternative": "An array containing: PHP6", "id": 286, "question_id": 46}, {"is_correct": false, "alternative": "An array containing: PHP5 and PHP6", "id": 287, "question_id": 46}, {"is_correct": false, "alternative": "An array containing: PHP6 and released", "id": 288, "question_id": 46}, {"is_correct": false, "alternative": "An array containing: released, not and released", "id": 289, "question_id": 46}], "created_at": {"$date": 1400256707000}, "question": "What is the output of the following code?\r\n[code]\r\n<?php\r\n$pattern    = \"# \\w*(?![0-9]{1}) (\\w+)#\";\r\n$string        = \"PHP5 released PHP6 not released\";\r\npreg_match_all($pattern, $string, $matches);\r\nprint_r($matches[1]);\r\n?>\r\n[/code]", "id": 46, "id_google": 1365, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "PHP 5\\.5 is fun(new line) ", "id": 290, "question_id": 47}, {"is_correct": false, "alternative": "PHP 5.5 is fun(new line) ", "id": 291, "question_id": 47}, {"is_correct": false, "alternative": "PHP 5\\\\.5 is fun(new line) ", "id": 292, "question_id": 47}, {"is_correct": false, "alternative": "PHP 5\\\\\\.5 is fun\\n ", "id": 293, "question_id": 47}, {"is_correct": true, "alternative": "PHP 5\\\\.5 is fun\\n ", "id": 294, "question_id": 47}, {"is_correct": false, "alternative": "None of the above ", "id": 295, "question_id": 47}], "created_at": {"$date": 1400257938000}, "question": "What will be the output of this script? \r\n[code]\r\n<?php \r\necho 'PHP 5\\\\\\.5 is fun\\n'; \r\n?> \r\n[/code]", "id": 47, "id_google": 1368, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "0", "id": 296, "question_id": 48}, {"is_correct": false, "alternative": "8", "id": 297, "question_id": 48}, {"is_correct": false, "alternative": "10", "id": 298, "question_id": 48}, {"is_correct": true, "alternative": "16", "id": 299, "question_id": 48}, {"is_correct": false, "alternative": "40", "id": 300, "question_id": 48}, {"is_correct": false, "alternative": "None of the above", "id": 301, "question_id": 48}], "created_at": {"$date": 1400258167000}, "question": "What will be the output? \r\n[code]\r\n<?php \r\n$str = \"PHP 5.5 \u00e7\u00e2\"; \r\necho strlen(utf8_encode($str)); \r\n?> \r\n[/code]", "id": 48, "id_google": 1363, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [], "created_at": {"$date": 1400258305000}, "question": "What is the output of the following code?\r\n[code]\r\n<?php\r\n$pattern = \"/[a-z0-9]{4}/i\";\r\n$string = \"PHP5 Rocks!\";\r\n$matches = preg_match($pattern, $string);\r\nprint_r($matches);\r\n?>\r\n[/code]", "id": 49, "id_google": 1366, "answer": "1", "type_question": 2}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": true, "alternative": "strip_tags()", "id": 302, "question_id": 50}, {"is_correct": false, "alternative": "tidy_strip_html()", "id": 303, "question_id": 50}, {"is_correct": false, "alternative": "str_replace()", "id": 304, "question_id": 50}, {"is_correct": false, "alternative": "strip_html()", "id": 305, "question_id": 50}], "created_at": {"$date": 1400278877000}, "question": "Removing undesired markup tags from input can best be done using which function?", "id": 50, "id_google": 1364, "answer": "", "type_question": 1}, {"comment": "http://www.php.net/manual/en/function.flock.php", "id_category": 5, "alternatives": [{"is_correct": true, "alternative": "When running in a Linux environment local filesystem ", "id": 316, "question_id": 51}, {"is_correct": false, "alternative": "When accessing the stream of the local filesystem ", "id": 317, "question_id": 51}, {"is_correct": false, "alternative": "When running in a Windows environment and accessing a share ", "id": 318, "question_id": 51}, {"is_correct": false, "alternative": "When accessing a bi-directional stream ", "id": 319, "question_id": 51}, {"is_correct": false, "alternative": "When accessing a read-only stream ", "id": 320, "question_id": 51}], "created_at": {"$date": 1400278969000}, "question": "Using flock() to lock a stream is only assured to work under what circumstances?", "id": 51, "id_google": 1361, "answer": "", "type_question": 1}, {"comment": "%o => Octal representation", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "true", "id": 321, "question_id": 52}, {"is_correct": false, "alternative": "false", "id": 322, "question_id": 52}, {"is_correct": true, "alternative": "10.00 === 1212", "id": 323, "question_id": 52}, {"is_correct": false, "alternative": "10.00 === 12", "id": 324, "question_id": 52}, {"is_correct": false, "alternative": "10.00 === 10 ", "id": 325, "question_id": 52}, {"is_correct": false, "alternative": "An error ", "id": 326, "question_id": 52}], "created_at": {"$date": 1400279584000}, "question": "What will be printed when we execute this script? \r\n[code]\r\n<?php \r\n$var = 10; \r\n$format = \"%.2f === %o\"; \r\n$s = printf($format, $var, $var); \r\necho $s; \r\n?> \r\n[/code]", "id": 52, "id_google": 1362, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 10, "alternatives": [{"is_correct": true, "alternative": "soap_last_error ", "id": 371, "question_id": 53}, {"is_correct": false, "alternative": "is_soap_fault ", "id": 372, "question_id": 53}, {"is_correct": false, "alternative": "get_soap_last_error ", "id": 373, "question_id": 53}, {"is_correct": false, "alternative": "SoapFault::getError ", "id": 374, "question_id": 53}, {"is_correct": false, "alternative": "None of the above ", "id": 375, "question_id": 53}], "created_at": {"$date": 1400279720000}, "question": "Which function can we use to see if a SOAP call have failed? ", "id": 53, "id_google": 1360, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 9, "alternatives": [], "created_at": {"$date": 1400280071000}, "question": "Which function tests for end-of-file on a file pointer? (write the name without parenthesis nor parameters) \r\n", "id": 54, "id_google": 1359, "answer": "feof", "type_question": 2}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "STDIN", "id": 332, "question_id": 55}, {"is_correct": false, "alternative": "__STDIN__", "id": 333, "question_id": 55}, {"is_correct": false, "alternative": "STDIO", "id": 334, "question_id": 55}, {"is_correct": false, "alternative": "PHP::STDIO", "id": 335, "question_id": 55}, {"is_correct": false, "alternative": "STD_IN", "id": 336, "question_id": 55}], "created_at": {"$date": 1400280228000}, "question": "The _________ constants in a CLI script is an automatically provided file resource representing standard input of the terminal.", "id": 55, "id_google": 1358, "answer": "", "type_question": 1}, {"comment": "", "id_category": 5, "alternatives": [{"is_correct": false, "alternative": "$userinfo = fscanf($handle, \":name :profession :lang\"); ", "id": 337, "question_id": 56}, {"is_correct": true, "alternative": "$userinfo = fscanf($handle, \"%s\\t%s\\t%s\\n\"); ", "id": 338, "question_id": 56}, {"is_correct": false, "alternative": "$userinfo = fscanf($handle, \"^%s[]+%s[]+%s\\n$\"); ", "id": 339, "question_id": 56}, {"is_correct": false, "alternative": "$userinfo = sscanf($handle, \"%s %s %s\"); ", "id": 340, "question_id": 56}, {"is_correct": false, "alternative": "$userinfo = fscanf($handle, \"%s %s %s\"); ", "id": 341, "question_id": 56}, {"is_correct": false, "alternative": "None of the above ", "id": 342, "question_id": 56}], "created_at": {"$date": 1400280344000}, "question": "Which of the following instructions would read the following file correctly? \r\n\r\njavier    argonaut    pt \r\nhiroshi    sculptor    jp \r\nrobert    slacker    us \r\nluigi    florist    it \r\n", "id": 56, "id_google": 1357, "answer": "", "type_question": 1}, {"comment": "    ", "id_category": 5, "alternatives": [{"is_correct": true, "alternative": "You can't use a context with file_get_contents ", "id": 384, "question_id": 57}, {"is_correct": false, "alternative": "You can't use a stream for basic authentication, you should use curl ", "id": 385, "question_id": 57}, {"is_correct": false, "alternative": "The second parameter (false) in file_get_contents will invalidate the call ", "id": 386, "question_id": 57}, {"is_correct": false, "alternative": "There is nothing wrong with this code ", "id": 387, "question_id": 57}], "created_at": {"$date": 1400280765000}, "question": "We want to get the content of a web page protected with HTTP Basic Authorization, what's wrong with the following code? \r\n[code]\r\n<?php \r\n//Assume $url, $username and $password are defined and valid \r\n$params = array( \r\n    'http'=> array( \r\n        'method' => 'GET', \r\n        'header' => 'Authorization: Basic '.base64_encode($username).':'.base64_encode($password) \r\n        ) \r\n    ); \r\n$stream = stream_context_create($params); \r\n$str = file_get_contents($url, false, $stream); \r\n?> \r\n[/code]", "id": 57, "id_google": 1354, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "A warning ", "id": 351, "question_id": 58}, {"is_correct": false, "alternative": "A notice ", "id": 352, "question_id": 58}, {"is_correct": false, "alternative": "A fatal error ", "id": 353, "question_id": 58}, {"is_correct": false, "alternative": "We can't write the file and 0 is returned ", "id": 354, "question_id": 58}, {"is_correct": true, "alternative": "We can't write the file and FALSE is returned ", "id": 355, "question_id": 58}, {"is_correct": false, "alternative": "We overwrite the file and offset is returned ", "id": 356, "question_id": 58}, {"is_correct": false, "alternative": "We append to the file and the number of bytes written is returned ", "id": 357, "question_id": 58}], "created_at": {"$date": 1400280949000}, "question": "What would happen if we used fwrite() on a read-only file? ", "id": 58, "id_google": 1355, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "Only returns JSON", "id": 358, "question_id": 59}, {"is_correct": true, "alternative": "Uses only HTTP", "id": 359, "question_id": 59}, {"is_correct": true, "alternative": "Stateless", "id": 360, "question_id": 59}, {"is_correct": true, "alternative": "Exposes URIs", "id": 361, "question_id": 59}, {"is_correct": false, "alternative": "Accepted headers varies from v1.1 to v1.2", "id": 362, "question_id": 59}, {"is_correct": false, "alternative": "Only accepts GET, POST and DELETE", "id": 363, "question_id": 59}], "created_at": {"$date": 1400281172000}, "question": "Which of the following affirmations about REST design standard are TRUE?", "id": 59, "id_google": 1353, "answer": "", "type_question": 3}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "SimpleXMLElement::asXML()", "id": 364, "question_id": 60}, {"is_correct": false, "alternative": "simplexml_to_dom()", "id": 365, "question_id": 60}, {"is_correct": false, "alternative": "simplexml2dom()", "id": 366, "question_id": 60}, {"is_correct": true, "alternative": "dom_import_simplexml()", "id": 367, "question_id": 60}, {"is_correct": false, "alternative": "$dom = new DOMElement($SimpleXMLElement)", "id": 368, "question_id": 60}, {"is_correct": false, "alternative": "SimpleXMLElement::asDom()", "id": 369, "question_id": 60}, {"is_correct": false, "alternative": "SimpleXMLElement::saveXML()", "id": 370, "question_id": 60}], "created_at": {"$date": 1400281688000}, "question": "What function would you use to create a DOMElement object from a SimpleXMLElement object?", "id": 60, "id_google": 1352, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "201", "id": 388, "question_id": 61}, {"is_correct": false, "alternative": "404", "id": 389, "question_id": 61}, {"is_correct": false, "alternative": "401", "id": 390, "question_id": 61}, {"is_correct": false, "alternative": "100", "id": 391, "question_id": 61}, {"is_correct": false, "alternative": "500", "id": 392, "question_id": 61}, {"is_correct": true, "alternative": "302", "id": 393, "question_id": 61}], "created_at": {"$date": 1400519981000}, "question": "Which HTTP status code informs of a redirection?", "id": 61, "id_google": 1320, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "!header_exists(\"Location: $url\")", "id": 394, "question_id": 62}, {"is_correct": true, "alternative": "!in_array(\"Location: $url\", headers_list())", "id": 395, "question_id": 62}, {"is_correct": false, "alternative": "!header_location($url)", "id": 396, "question_id": 62}, {"is_correct": false, "alternative": "$_SERVER['HTTP_LOCATION'] != $url", "id": 397, "question_id": 62}], "created_at": {"$date": 1400520241000}, "question": "Consider the following function:\r\n[code]\r\n<?php\r\nfunction redirect($url) {\r\n    //Check to make sure we haven't already sent the header:\r\n    if(??????){\r\n        header(\"Location: $url\");\r\n    }\r\n}\r\n?>\r\n[/code]\r\nWhat conditional should replace the ?????? above?", "id": 62, "id_google": 1322, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "_NAMESPACE_", "id": 398, "question_id": 63}, {"is_correct": true, "alternative": "_LINE_", "id": 399, "question_id": 63}, {"is_correct": true, "alternative": "_DIR_", "id": 400, "question_id": 63}, {"is_correct": false, "alternative": "_CHAR_", "id": 401, "question_id": 63}, {"is_correct": true, "alternative": "_CLASS_", "id": 402, "question_id": 63}, {"is_correct": false, "alternative": "_ARGS_", "id": 403, "question_id": 63}, {"is_correct": false, "alternative": "_METHOD_", "id": 404, "question_id": 63}, {"is_correct": false, "alternative": "_VAR_", "id": 405, "question_id": 63}], "created_at": {"$date": 1400520912000}, "question": "Which of the following are valid \"magic\" constants?", "id": 63, "id_google": 1316, "answer": "", "type_question": 3}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "10", "id": 406, "question_id": 64}, {"is_correct": false, "alternative": "0", "id": 407, "question_id": 64}, {"is_correct": true, "alternative": "100", "id": 408, "question_id": 64}, {"is_correct": false, "alternative": "1000", "id": 409, "question_id": 64}, {"is_correct": false, "alternative": "Will throw an error", "id": 410, "question_id": 64}, {"is_correct": false, "alternative": "None of the above", "id": 411, "question_id": 64}], "created_at": {"$date": 1400532640000}, "question": "What will be printed?\r\n[code]\r\n<?php\r\n$a = 100;\r\nfunction a($b = 1){\r\n    $a = 0;\r\n    global $a;\r\n    return $a / 10 * $b;\r\n}\r\necho a(A());\r\n?>\r\n[/code]", "id": 64, "id_google": 1303, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [], "created_at": {"$date": 1400532853000}, "question": "What will be the output of this script?\r\n[code]\r\n<?php\r\necho true ? 'what' : true ? 'will' : 'print?';\r\n?>\r\n[/code]", "id": 65, "id_google": 1304, "answer": "will", "type_question": 2}, {"comment": "", "id_category": 3, "alternatives": [], "created_at": {"$date": 1400533066000}, "question": "What's the name of the error level constant that identifies fatal run-time errors? \r\n", "id": 66, "id_google": 1305, "answer": "E_ERROR", "type_question": 2}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "There is no way to do this", "id": 412, "question_id": 67}, {"is_correct": false, "alternative": "$string = $argv[1];", "id": 413, "question_id": 67}, {"is_correct": false, "alternative": "$string = $_ARGV[0];", "id": 414, "question_id": 67}, {"is_correct": true, "alternative": "list($string) = func_get_args();", "id": 415, "question_id": 67}, {"is_correct": false, "alternative": "$string = get_function_args();", "id": 416, "question_id": 67}], "created_at": {"$date": 1400533479000}, "question": "What would you replace ??????? with, below, to make the string Hello, World! be displayed?\r\n[code]\r\n<?php\r\nfunction myfunction() {\r\n    ???????\r\n    print $string;\r\n}\r\nmyfunction(\"Hello, World!\");\r\n?>\r\n[/code]", "id": 67, "id_google": 1301, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [], "created_at": {"$date": 1400533857000}, "question": "What will be printed? \r\n[code]\r\n<?php \r\n$a = false; \r\nif($a=0) \r\n    echo \"true\"; \r\nelse \r\n    echo \"false\"; \r\n?> \r\n[/code]", "id": 68, "id_google": 1296, "answer": "false", "type_question": 2}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "0", "id": 424, "question_id": 69}, {"is_correct": false, "alternative": "1", "id": 425, "question_id": 69}, {"is_correct": false, "alternative": "3", "id": 426, "question_id": 69}, {"is_correct": false, "alternative": "5", "id": 427, "question_id": 69}, {"is_correct": false, "alternative": "8", "id": 428, "question_id": 69}, {"is_correct": false, "alternative": "It will print an error ", "id": 429, "question_id": 69}, {"is_correct": false, "alternative": "None of the above", "id": 430, "question_id": 69}], "created_at": {"$date": 1400536306000}, "question": "What will the following code print? \r\n[code]\r\n<php> \r\nfunction fibo($a, $b, $step) { \r\n    if($step > 0) { \r\n        --$step; \r\n        return fibo($b, $a+$b, $step); \r\n    } \r\n    else { \r\n        return $b; \r\n    } \r\n} \r\necho fibo(0, 1, 5); \r\n</php> \r\n[/code]", "id": 69, "id_google": 1297, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "16", "id": 1010, "question_id": 70}, {"is_correct": true, "alternative": "51", "id": 1011, "question_id": 70}, {"is_correct": false, "alternative": "15", "id": 1012, "question_id": 70}, {"is_correct": false, "alternative": "6", "id": 1013, "question_id": 70}, {"is_correct": false, "alternative": "5", "id": 1014, "question_id": 70}], "created_at": {"$date": 1400536906000}, "question": "What is the output of the following code? \r\n[code]\r\n<?php \r\nfunction oranges(&$oranges = 17){ \r\n    $oranges .= 1; \r\n    } \r\n$apples = 5; \r\noranges($apples); \r\necho $apples++; \r\n?> \r\n[/code]", "id": 70, "id_google": 1295, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "0", "id": 436, "question_id": 71}, {"is_correct": false, "alternative": "36", "id": 437, "question_id": 71}, {"is_correct": false, "alternative": "6", "id": 438, "question_id": 71}, {"is_correct": false, "alternative": "30", "id": 439, "question_id": 71}, {"is_correct": false, "alternative": "5", "id": 440, "question_id": 71}], "created_at": {"$date": 1400537012000}, "question": "What is the output of the following?\r\n[code]\r\n<?php\r\nfunction a($number){\r\n    return (b($number) * $number);\r\n    }\r\nfunction b(&$number){\r\n    ++$number;\r\n}\r\necho a(5);\r\n[/code]", "id": 71, "id_google": 1290, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": " Static methods can only be called using the :: syntax and never from an instance", "id": 441, "question_id": 72}, {"is_correct": true, "alternative": "Static methods do not provide a reference to $this", "id": 442, "question_id": 72}, {"is_correct": false, "alternative": "Static methods cannot be called from within class instances", "id": 443, "question_id": 72}, {"is_correct": false, "alternative": "Static methods don't have access to the self keyword", "id": 444, "question_id": 72}, {"is_correct": false, "alternative": "There is no functional difference between a static and non-static method", "id": 445, "question_id": 72}], "created_at": {"$date": 1400537084000}, "question": "What is the primary difference between a method declared as static and a normal method?", "id": 72, "id_google": 1288, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "...0", "id": 446, "question_id": 73}, {"is_correct": true, "alternative": "Parse error: syntax error", "id": 447, "question_id": 73}, {"is_correct": false, "alternative": ".....", "id": 448, "question_id": 73}, {"is_correct": false, "alternative": "....", "id": 449, "question_id": 73}, {"is_correct": false, "alternative": "...", "id": 450, "question_id": 73}], "created_at": {"$date": 1400537177000}, "question": "What is the output of the following?\r\n[code]\r\n<?php\r\nfunction 1doEach($n){\r\n    if($n > 0) {\r\n        1doEach(--$n);\r\n        echo \".\";\r\n    }\r\n    else {\r\n        return $n;\r\n    }\r\n}\r\n1doEach(4);\r\n?>\r\n[/code]", "id": 73, "id_google": 1287, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": true, "alternative": "20", "id": 451, "question_id": 74}, {"is_correct": false, "alternative": "22", "id": 452, "question_id": 74}, {"is_correct": false, "alternative": "18", "id": 453, "question_id": 74}, {"is_correct": false, "alternative": "$a is an invalid value", "id": 454, "question_id": 74}, {"is_correct": false, "alternative": "2", "id": 455, "question_id": 74}], "created_at": {"$date": 1400537305000}, "question": "What is the output of the following?\r\n[code]\r\n<?php\r\n$a = 010;\r\n$b = 0xA;\r\n$c = 2;\r\n\r\nprint $a + $b + $c;\r\n[/code]\r\n\r\nA: 20\r\nB: 22\r\nC: 18\r\nD: $a is an invalid value\r\nE: 2", "id": 74, "id_google": 1292, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "FOO", "id": 456, "question_id": 75}, {"is_correct": false, "alternative": "100", "id": 457, "question_id": 75}, {"is_correct": true, "alternative": "200", "id": 458, "question_id": 75}, {"is_correct": false, "alternative": "20", "id": 459, "question_id": 75}, {"is_correct": false, "alternative": "10", "id": 460, "question_id": 75}], "created_at": {"$date": 1400537400000}, "question": "What is the output of the following PHP code?\r\n[code]\r\n<?php\r\ndefine('FOO', 10);\r\n$array = array(10 => FOO, \"FOO\" => 20);\r\nprint $array[$array[FOO]] * $array[\"FOO\"];\r\n?>\r\n[/code]", "id": 75, "id_google": 1289, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "get_backtrace()", "id": 461, "question_id": 76}, {"is_correct": false, "alternative": "get_function_stack()", "id": 462, "question_id": 76}, {"is_correct": true, "alternative": "debug_backtrace()", "id": 463, "question_id": 76}, {"is_correct": true, "alternative": "debug_print_backtrace()", "id": 464, "question_id": 76}, {"is_correct": false, "alternative": "print_backtrace()", "id": 465, "question_id": 76}], "created_at": {"$date": 1400537600000}, "question": "Which of the following functions allow you to introspect the call stack during execution of a PHP script?", "id": 76, "id_google": 1291, "answer": "", "type_question": 3}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "Loops infinitely", "id": 466, "question_id": 77}, {"is_correct": false, "alternative": "Switches the values of $p and $q", "id": 467, "question_id": 77}, {"is_correct": true, "alternative": "Determines if they are both even or odd", "id": 468, "question_id": 77}, {"is_correct": false, "alternative": "Determines the greatest common divisor between them", "id": 469, "question_id": 77}, {"is_correct": false, "alternative": "Calculates the modulus between the two", "id": 470, "question_id": 77}], "created_at": {"$date": 1400621795000}, "question": "What does the following function do, when passed two integer values for $p and $q?\r\n[code]\r\n<?php\r\nfunction magic($p, $q){\r\n    return ($q == 0) ? $p : magic($q, $p % $q);\r\n}\r\n[/code]", "id": 77, "id_google": 1279, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "We can access the function without any further change because we have access to all namespaces below \"app root\"", "id": 471, "question_id": 78}, {"is_correct": false, "alternative": "use test", "id": 472, "question_id": 78}, {"is_correct": false, "alternative": "use core\\test", "id": 473, "question_id": 78}, {"is_correct": true, "alternative": "use approot\\core\\test", "id": 474, "question_id": 78}, {"is_correct": false, "alternative": "use core::test::test()", "id": 475, "question_id": 78}, {"is_correct": false, "alternative": "We can't change the namespace once we have specified one", "id": 476, "question_id": 78}], "created_at": {"$date": 1400621911000}, "question": "If we in the namespace 'approot' and want to use the function test() that is in the namespace 'approot\\core\\test', what should we use?\r\n", "id": 78, "id_google": 1277, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": "##", "id": 1015, "question_id": 79}, {"is_correct": false, "alternative": "Notice", "id": 1016, "question_id": 79}, {"is_correct": false, "alternative": "Warning", "id": 1017, "question_id": 79}, {"is_correct": false, "alternative": "Syntax Error", "id": 1018, "question_id": 79}, {"is_correct": true, "alternative": "#", "id": 1019, "question_id": 79}], "created_at": {"$date": 1400622016000}, "question": "When your error reporting level includes E_STRICT, what will the output of the following code be?\r\n[code]\r\n<?php\r\nfunction optionalParam($x=1, $y=5, $z){\r\n    if ((!$z > 0)){\r\n        $z = 1;\r\n    }\r\n    for($count = $x; $count < $y; $count+=$z){\r\n        echo \"#\";\r\n    }\r\n}\r\noptionalParam(2,4,2);\r\n?>\r\n[/code]", "id": 79, "id_google": 1280, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "mysql.allow_persistent", "id": 482, "question_id": 80}, {"is_correct": false, "alternative": "session.permanent_cache", "id": 483, "question_id": 80}, {"is_correct": false, "alternative": "error_reporting_enabled", "id": 484, "question_id": 80}, {"is_correct": false, "alternative": "allow_open_url", "id": 485, "question_id": 80}, {"is_correct": true, "alternative": "allow_url_include", "id": 486, "question_id": 80}, {"is_correct": false, "alternative": "set_base_dir", "id": 487, "question_id": 80}, {"is_correct": false, "alternative": "max_file_downloads", "id": 488, "question_id": 80}], "created_at": {"$date": 1400622321000}, "question": "Which of the following are configuration settings for PHP?", "id": 80, "id_google": 1281, "answer": "", "type_question": 3}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "-2", "id": 489, "question_id": 81}, {"is_correct": false, "alternative": "-1", "id": 490, "question_id": 81}, {"is_correct": false, "alternative": "0", "id": 491, "question_id": 81}, {"is_correct": false, "alternative": "1", "id": 492, "question_id": 81}, {"is_correct": true, "alternative": "2", "id": 493, "question_id": 81}, {"is_correct": false, "alternative": "129", "id": 494, "question_id": 81}, {"is_correct": false, "alternative": "130", "id": 495, "question_id": 81}, {"is_correct": false, "alternative": "An error will be printed ", "id": 496, "question_id": 81}], "created_at": {"$date": 1400622440000}, "question": "What will be printed? \r\n[code]\r\n<?php \r\necho (013 + 7 + 0x70) - bindec('010000000'); \r\n?> \r\n[/code]", "id": 81, "id_google": 1284, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "1: 2, 2: 20, 3: 15 ", "id": 497, "question_id": 82}, {"is_correct": false, "alternative": "1: 3, 2: 21, 3: 16 ", "id": 498, "question_id": 82}, {"is_correct": false, "alternative": "1: 2, 2: 21, 3: 15 ", "id": 499, "question_id": 82}, {"is_correct": false, "alternative": "1: 3, 2: 20, 3: 15 ", "id": 500, "question_id": 82}, {"is_correct": true, "alternative": "1: 2, 2: 20, 3: 16 ", "id": 501, "question_id": 82}], "created_at": {"$date": 1400622506000}, "question": "What is the output of the following function? \r\n[code]\r\n<?php \r\nfunction &find_variables(&$one, &$two, &$three){ \r\n    if($one>10 && $one<20) return $one; \r\n    if($two>10 && $two<20) return $two; \r\n    if($three>10 && $three<20) return $three; \r\n    } \r\n    \r\n$one = 2; \r\n$two = 20; \r\n$three = 15; \r\n$var = &find_variables($one, $two, $three); \r\n$var++; \r\nprint \"1: $one, 2: $two, 3: $three\"; \r\n?> \r\n[/code]", "id": 82, "id_google": 1286, "answer": "", "type_question": 1}, {"comment": "  ", "id_category": 3, "alternatives": [], "created_at": {"$date": 1400622556000}, "question": "What will be the output of this script?\r\n[code]\r\n<?php\r\n$arr = array(\r\n    array(\r\n        \"name\"=>\"John\",\r\n        \"surname\"=>\"Smith\"\r\n    ),\r\n    array(\r\n        \"name\"=>\"James\",\r\n        \"surname\"=>\"Smith\"\r\n    ),\r\n    array(\r\n        \"name\"=>\"Jonathan\",\r\n        \"surname\"=>\"Smith\"\r\n    )\r\n);\r\n\r\nfunction printUser($id){\r\n    global $arr;\r\n    foreach($arr as $key => $user) {\r\n        if($id==$key)\r\n            echo $user[\"name\"];\r\n            echo $user[\"surname\"];\r\n            \r\n        }\r\n    }\r\nprintUser(00);\r\n?>\r\n[/code]", "id": 83, "id_google": 1278, "answer": "JohnSmithSmithSmith", "type_question": 2}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "Return value have to be &$newObj ", "id": 502, "question_id": 84}, {"is_correct": false, "alternative": "Yes, it does ", "id": 503, "question_id": 84}, {"is_correct": false, "alternative": "duplicate() must accept its parameter by reference (with &) ", "id": 504, "question_id": 84}, {"is_correct": true, "alternative": "You must use the clone operator to make a copy of an object ", "id": 505, "question_id": 84}, {"is_correct": false, "alternative": "duplicate() must return a reference (with & in front of the function name) ", "id": 506, "question_id": 84}], "created_at": {"$date": 1400622856000}, "question": "Does the following code accomplish it's purpose? \r\n[code]\r\n<?php \r\nfunction duplicate($obj){ \r\n    $newObj = $obj; \r\n    return $newObj; \r\n} \r\n\r\n$a = new MyClass(); \r\n$a_copy = duplicate($a); \r\n$a->setValue(10); \r\n$a_copy->setValue(20); \r\n?> \r\n[/code]", "id": 84, "id_google": 1285, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "\"Cought Exception\" followed by \"Didn't catch the Exception!\" ", "id": 507, "question_id": 85}, {"is_correct": false, "alternative": "A fatal error for an uncaught exception ", "id": 508, "question_id": 85}, {"is_correct": true, "alternative": "\"Didn't catch the Exception!\" ", "id": 509, "question_id": 85}, {"is_correct": false, "alternative": "\"Didn't catch the Exception!\" followed by a tatar error ", "id": 510, "question_id": 85}, {"is_correct": false, "alternative": "\"Cought Exception\" ", "id": 511, "question_id": 85}], "created_at": {"$date": 1400622968000}, "question": "What is the output of the following code? \r\n[code]\r\n<?php \r\nclass MyException extends Exception{} \r\nclass AnotherException extends MyException {} \r\nclass Foo { \r\n    public function something() { \r\n        throw new AnotherException(); \r\n    } \r\n    public function somethingElse() { \r\n        throw new MyException(); \r\n    } \r\n} \r\n\r\n$a = new Foo(); \r\ntry { \r\n    try { \r\n        $a->something(); \r\n    } catch(AnotherException $e) { \r\n        $a->somethingElse(); \r\n    } catch(AnotherException $e) { \r\n        print \"Cought Exception\"; \r\n    } \r\n} catch(Exception $e){ \r\n    print \"Didn't catch the Exception!\"; \r\n} \r\n?> \r\n[/code]", "id": 85, "id_google": 1283, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "json_decode", "id": 512, "question_id": 86}, {"is_correct": false, "alternative": "strtok", "id": 513, "question_id": 86}, {"is_correct": false, "alternative": "json_encode", "id": 514, "question_id": 86}, {"is_correct": false, "alternative": "sscanf", "id": 515, "question_id": 86}, {"is_correct": true, "alternative": "unserialize", "id": 516, "question_id": 86}], "created_at": {"$date": 1400623019000}, "question": "Using which function is the simplest way to retrieve the information of this user?\r\n[code]\r\n<?php\r\n$data = 'O:8:\"stdClass\":2:{s:2:\"id\";i:123;s:4:\"info\";a:1:{s:4:\"name\";s:5:\"James\";}}';\r\n?>\r\n[/code]\r\n", "id": 86, "id_google": 1282, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [], "created_at": {"$date": 1400623049000}, "question": "Fill in the blank with the appropriate function name. Do not add parenthesis.\r\n\r\nThe __________() function is used to set a cookie to be sent along with the rest of the HTTP headers.\r\n", "id": 87, "id_google": 1275, "answer": "setcookie", "type_question": 2}, {"comment": "", "id_category": 9, "alternatives": [], "created_at": {"$date": 1400623191000}, "question": "What is the output of the following code?\r\n[code]\r\n<?php\r\nob_start();\r\necho \"PHP\";\r\n$ob1 = ob_get_contents();\r\necho 5;\r\n$ob2 = ob_get_clean();\r\nob_flush();\r\necho strrev($ob1.$ob2)\r\n?>\r\n[/code]", "id": 88, "id_google": 1276, "answer": "5PHPPHP", "type_question": 2}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "PHP will throw a fatal error and the script will be terminated", "id": 517, "question_id": 89}, {"is_correct": false, "alternative": "$var is equal to 0", "id": 518, "question_id": 89}, {"is_correct": false, "alternative": "$var is equal to FALSE", "id": 519, "question_id": 89}, {"is_correct": true, "alternative": "$var is equal to 4", "id": 520, "question_id": 89}, {"is_correct": false, "alternative": "$var is equal to 48", "id": 521, "question_id": 89}], "created_at": {"$date": 1400623478000}, "question": "Which of the following affirmations are correct ?\r\n[code]\r\n<?php\r\n$data = 048;\r\n$var = (string) $data;\r\n?>\r\n[/code]", "id": 89, "id_google": 1274, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": " w", "id": 522, "question_id": 90}, {"is_correct": false, "alternative": "w+", "id": 523, "question_id": 90}, {"is_correct": true, "alternative": "a", "id": 524, "question_id": 90}, {"is_correct": false, "alternative": "a+", "id": 525, "question_id": 90}], "created_at": {"$date": 1400623752000}, "question": "Suppose you want to open a file only for writing. If a file with that name does not exist, attempts to create a new file. If the file exists, it places the file pointer at the end of the file after all other data. Which of the following modes will you use?", "id": 90, "id_google": 1272, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "session_encode()", "id": 526, "question_id": 91}, {"is_correct": true, "alternative": "session_commit()", "id": 527, "question_id": 91}, {"is_correct": false, "alternative": "session_id()", "id": 528, "question_id": 91}, {"is_correct": false, "alternative": "session_cache_limiter()", "id": 529, "question_id": 91}], "created_at": {"$date": 1400623824000}, "question": "Which of the following session functions acts as the alias of session_write_close()?", "id": 91, "id_google": 1273, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "In PHP, an exception can be thrown and caught.", "id": 530, "question_id": 92}, {"is_correct": false, "alternative": "The thrown object should be an instance of the Exception class or any subclass of Exception.", "id": 531, "question_id": 92}, {"is_correct": false, "alternative": "Every try block must have at least one corresponding catch block.", "id": 532, "question_id": 92}, {"is_correct": true, "alternative": "The finally block specified before the catch block always executes.", "id": 533, "question_id": 92}], "created_at": {"$date": 1400623868000}, "question": "Which of the following statements is NOT true regarding exceptions in PHP?", "id": 92, "id_google": 1271, "answer": "", "type_question": 1}, {"comment": "Explanation: Answer options A, B, and D are correct.\r\n\r\nThe PDOStatement::errorInfo() property is used to return an array of error information about the last operation performed by this statement handle. The syntax of the PDOStatement::errorInfo() property is:\r\n\r\npublic array PDOStatement::errorInfo ( void )\r\n\r\n\r\nIt contains the following fields:\r\n\r\n    0: SQLSTATE error code\r\n    1: Driver specific error code\r\n    2: Driver specific error message\r\n\r\nAnswer option C is incorrect. This is not the correct description of the contents of $info.\r\n\r\nReference: http://www.php.net/manual/en/pdostatement.errorinfo.php\r\nChapter: Manipulating MySQL Data with PHP\r\nObjective: Building a Member Registration Application", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "$info[1] is the driver-specific error code", "id": 534, "question_id": 93}, {"is_correct": true, "alternative": "$info[2] is the driver-specific error message", "id": 535, "question_id": 93}, {"is_correct": false, "alternative": "$info[1] is the unified error code", "id": 536, "question_id": 93}, {"is_correct": true, "alternative": "$info[0] is the unified error code", "id": 537, "question_id": 93}], "created_at": {"$date": 1400624192000}, "question": "Consider the following PHP code segment:\r\n[code]\r\n<?php\r\ntry{\r\n    $dbh->exec($sql);\r\n} catch (PDOException $exc) {\r\n    // Display warning message\r\n    $info = $exc->errorInfo;\r\n}\r\n?>\r\n[/code]\r\nIn case of PDOException, $info is set with the contents of the $errorInfo property of the exception. Which of the following accurately describe the contents of $info?\r\n\r\nEach correct answer represents a complete solution. Choose all that apply.\r\n", "id": 93, "id_google": 1270, "answer": "", "type_question": 3}, {"comment": "Explanation: Answer option A is correct.\r\n\r\nTo verify that the user has entered the correct date, you will use:\r\n\r\n\r\necho checkdate(2, 30, 2013) . \"<br />\";\r\n\r\n\r\nThe checkdate() function is used to check the validity of the date. It returns TRUE if all the fields of the date are properly defined, otherwise FALSE. The syntax of the checkdate() function is:\r\n\r\nbool checkdate ( int $month , int $day , int $year )\r\n\r\n\r\nAnswer option B is incorrect. The checkdate() function in the option B is not in the correct format.\r\n\r\nAnswer options C and D are incorrect. The functions used in options C and D are not the correct functions used to verify a date. The time() function is used to return the current UNIX timestamp. The date_format() function is used to return a date formatted according to the specified format.\r\nChapter: PHP and the Outside World\r\nObjective: Working with Dates and Times ", "id_category": 9, "alternatives": [{"is_correct": true, "alternative": "echo checkdate(2, 30, 2013) . \"<br />\";", "id": 538, "question_id": 94}, {"is_correct": false, "alternative": "echo checkdate(30, 2, 2013) . \"<br />\";", "id": 539, "question_id": 94}, {"is_correct": false, "alternative": "echo time(2, 30, 2013) . \"<br />\";", "id": 540, "question_id": 94}, {"is_correct": false, "alternative": "echo date_format(2, 30, 2013 . \"<br />\";", "id": 541, "question_id": 94}], "created_at": {"$date": 1400624297000}, "question": "Suppose a user enters date as 30th February 2013. You want to verify that the user has entered the valid date. Which of the following statements will you use to accomplish the task?", "id": 94, "id_google": 1269, "answer": "", "type_question": 1}, {"comment": "  ", "id_category": 3, "alternatives": [], "created_at": {"$date": 1400624353000}, "question": "What is the output for the following program?\r\n[code]\r\n<?php\r\nfunction operacao(&$x) {\r\n    return $x + 1;\r\n}\r\n$a = 1;\r\necho operacao($a);\r\necho operacao($a);\r\n?>\r\n[/code]", "id": 95, "id_google": 1256, "answer": "22", "type_question": 2}, {"comment": "Explanation: Answer option B is correct.\r\n\r\nThe class_uses() function returns the traits that is used by a given class. The syntax of this method is as follows:\r\n\r\narray class_uses ( mixed $class [, bool $autoload = true ] )\r\n\r\nThe return type of this function is array. It returns an array with the names of all the traits that are used inside the class.\r\nAnswer option A is incorrect. The spl_autoload_call() function manually searches for a class or interface that uses the registered __autoload functions.\r\nAnswer option C is incorrect. The iterator_to_array() function of SPL copies the iterator into an array.\r\nAnswer option D is incorrect. The spl_classes() function returns an array with the current available SPL classes.", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "spl_autoload_call()", "id": 542, "question_id": 96}, {"is_correct": true, "alternative": "class_uses()", "id": 543, "question_id": 96}, {"is_correct": false, "alternative": " iterator_to_array()", "id": 544, "question_id": 96}, {"is_correct": false, "alternative": "spl_classes()", "id": 545, "question_id": 96}], "created_at": {"$date": 1400624451000}, "question": "Which of the following SPL functions returns the traits used by a given class?", "id": 96, "id_google": 1266, "answer": "", "type_question": 1}, {"comment": "Explanation: Answer option A is correct.\r\n\r\nA PHP script receives an E_CORE_ERROR error when a fatal run-time error occurs during the PHP engine's initial startup.\r\n\r\nAnswer option B is incorrect. An E_COMPILE_ERROR error is received when a fatal compile-time error occurs in the script. It is generated by the Zend Scripting Engine.\r\n\r\nAnswer option C is incorrect. An E_ERROR error is received when a fatal run-time error occurs. It is generally received in the case of a memory allocation problem.\r\n\r\nAnswer option D is incorrect. An E_PARSE error is received when a fatal compile-time parse error occurs.\r\nChapter: Writing High-Quality Code\r\nObjective: Handling Errors", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "A fatal error occurred during the PHP engine's startup.", "id": 546, "question_id": 97}, {"is_correct": false, "alternative": "A fatal error occurred while the script was being compiled.", "id": 547, "question_id": 97}, {"is_correct": false, "alternative": "A fatal runtime error that can't be recovered from.", "id": 548, "question_id": 97}, {"is_correct": false, "alternative": "The script couldn't be run because there was a problem parsing it.", "id": 549, "question_id": 97}], "created_at": {"$date": 1400624547000}, "question": "You try to run a PHP script but it stops running and receive an error as \"E_CORE_ERROR\". Which of the following describes this error?", "id": 97, "id_google": 1268, "answer": "", "type_question": 1}, {"comment": "Explanation: Answer options B and E are correct.\r\n\r\nCookies are text files stored on a client computer. The Set-Cookie header that is sent to the client includes a Max-Age attribute. A cookie can be set by using the setcookie() or setrawcookie() function. PHP transparently supports HTTP cookies. The syntax of the setcookie() function is:\r\n\r\n bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] )\r\n\r\n\r\nWhere, $name specifies the name of the cookie, $value specifies the value of the cookie, $expire specifies the time when the cookie expires, $path specifies the path on the server in which the cookie will be available on, $domain specifies the domain that the cookie is available to, $secure specifies that the cookie should only be transmitted over a secure HTTPS connection from the client, $httponly when set to True, the cookie will be made accessible only through the HTTP protocol.\r\n\r\nAnswer options A, C, and D are incorrect. Cookies are text files stored on a client's computer not server.\r\nChapter: Preserving State With Query Strings, Cookies, and Sessions\r\nObjective: Working with Cookies ", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "Cookies are text files stored on a client's server.", "id": 550, "question_id": 98}, {"is_correct": true, "alternative": "The Set-Cookie header that is sent to the client includes a Max-Age attribute.", "id": 551, "question_id": 98}, {"is_correct": false, "alternative": "A cookie can be set by using the set_cookie() method.", "id": 552, "question_id": 98}, {"is_correct": false, "alternative": "The set_cookie() method takes maximum 5 parameters.", "id": 553, "question_id": 98}, {"is_correct": true, "alternative": "PHP transparently supports HTTP cookies.", "id": 554, "question_id": 98}], "created_at": {"$date": 1400624765000}, "question": "Which of the following are true regarding cookies?\r\nEach correct answer represents a complete solution. Choose all that apply.", "id": 98, "id_google": 1267, "answer": "", "type_question": 3}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": true, "alternative": "Traits", "id": 555, "question_id": 99}, {"is_correct": false, "alternative": "Objects", "id": 556, "question_id": 99}, {"is_correct": false, "alternative": "Properties", "id": 557, "question_id": 99}, {"is_correct": false, "alternative": "Methods", "id": 558, "question_id": 99}], "created_at": {"$date": 1400687294000}, "question": "Which of the following acts as a mechanism to reuse code in a single inheritance?", "id": 99, "id_google": 1265, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "3", "id": 559, "question_id": 100}, {"is_correct": false, "alternative": "1 3 4 5 6 7 8 9", "id": 560, "question_id": 100}, {"is_correct": true, "alternative": "2", "id": 561, "question_id": 100}, {"is_correct": false, "alternative": "1", "id": 562, "question_id": 100}], "created_at": {"$date": 1400687433000}, "question": "Consider the following code snippet and predict the output:\r\n[code]\r\n<?php\r\n$val = 0;\r\nwhile( $val < 10)\r\n{\r\n        $val++;\r\n        if( $val == 2 )break;\r\n}\r\necho (\"$val\" );\r\n?>\r\n[/code]", "id": 100, "id_google": 1264, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "String", "id": 563, "question_id": 101}, {"is_correct": true, "alternative": "Boolean", "id": 564, "question_id": 101}, {"is_correct": true, "alternative": "Object", "id": 565, "question_id": 101}, {"is_correct": false, "alternative": "Regular expression", "id": 566, "question_id": 101}], "created_at": {"$date": 1400687575000}, "question": "JSON is syntax for storing and exchanging text information. Which of the following data types are supported by JSON?\r\n\r\nEach correct answer represents a complete solution. Choose all that apply.", "id": 101, "id_google": 1263, "answer": "", "type_question": 3}, {"comment": "Explanation: Answer options B, C, and D are correct.\r\n\r\nSome of the newly added features in PHP 5.5 are:\r\nGenerators: A generator provides a simple mechanism to iterate through data without any need of writing a class implementing the Iterator interface.\r\nfinally: This version of PHP supports the finally block after the try-catch block. The code inside the finally block will always execute regardless of whether an exception has been thrown or not.\r\nyield: The keyword 'yield' can be used in a function for both inputting and outputting data. The concept of generator is mainly implemented by this keyword.\r\nAnswer option A is incorrect. The try-catch block was available in previous versions as well.\r\nChapter: Introducing PHP\r\nObjective: What's New in PHP 5.5", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "try-catch ", "id": 567, "question_id": 102}, {"is_correct": true, "alternative": "Generators ", "id": 568, "question_id": 102}, {"is_correct": true, "alternative": "finally keyword ", "id": 569, "question_id": 102}, {"is_correct": true, "alternative": "yield keyword ", "id": 570, "question_id": 102}], "created_at": {"$date": 1400696113000}, "question": "Which of the following are the newly added features in PHP 5.5?\r\n\r\nEach correct answer represents a complete solution. Choose all that apply.", "id": 102, "id_google": 1262, "answer": "", "type_question": 3}, {"comment": "", "id_category": 4, "alternatives": [], "created_at": {"$date": 1400696780000}, "question": "Which function / method is missing in this code ?\r\n[code]\r\n<?php\r\nclass myClass {\r\n    private $_properties = 'Hello';\r\n\r\n    public function ________ ($name, $params) {\r\n         if ('getProperties' === $name) {\r\n             return $this->_properties;\r\n         }\r\n    }\r\n}\r\n\r\n$oMyClass = new myClass;\r\necho $oMyClass->getProperties();\r\n?>\r\n[/code]", "id": 103, "id_google": 1260, "answer": "__call", "type_question": 2}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "PHP will throw a fatal error and the script will be terminated (exterminated !)", "id": 576, "question_id": 104}, {"is_correct": false, "alternative": "PHP will throw a notice", "id": 577, "question_id": 104}, {"is_correct": false, "alternative": "$var is equal to TRUE", "id": 578, "question_id": 104}, {"is_correct": false, "alternative": "$var is equal to FALSE", "id": 579, "question_id": 104}, {"is_correct": false, "alternative": "$var is equal to NULL", "id": 580, "question_id": 104}], "created_at": {"$date": 1400790566000}, "question": "Which of the following affirmations are correct ?\r\n[code]\r\n<?php\r\n$data = ' data';\r\n$var = (empty(trim($data)));\r\n[/code]\r\n", "id": 104, "id_google": 1245, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "01", "id": 1020, "question_id": 105}, {"is_correct": false, "alternative": "10", "id": 1021, "question_id": 105}, {"is_correct": true, "alternative": "11", "id": 1022, "question_id": 105}, {"is_correct": false, "alternative": "00", "id": 1023, "question_id": 105}], "created_at": {"$date": 1400790962000}, "question": "What is the result of the operation below:\r\n[code]\r\n<?php\r\n    return 1 ^ 2 ;\r\n?>\r\n[/code]", "id": 105, "id_google": 1257, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": true, "alternative": "\u201c\u201d == false", "id": 585, "question_id": 106}, {"is_correct": false, "alternative": "\u201c00\u201d == false", "id": 586, "question_id": 106}, {"is_correct": true, "alternative": "\u201c0\u201d == false", "id": 587, "question_id": 106}, {"is_correct": false, "alternative": "\u201c \u201d == false", "id": 588, "question_id": 106}, {"is_correct": true, "alternative": "\u201cfalse\u201d == true", "id": 589, "question_id": 106}], "created_at": {"$date": 1400791309000}, "question": "Select the correct (true) answers\r\n", "id": 106, "id_google": 1251, "answer": "", "type_question": 3}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "Fatal Error", "id": 1028, "question_id": 107}, {"is_correct": true, "alternative": "false, true, false", "id": 1029, "question_id": 107}, {"is_correct": false, "alternative": "false, false, true", "id": 1030, "question_id": 107}, {"is_correct": false, "alternative": "true, true, false", "id": 1031, "question_id": 107}], "created_at": {"$date": 1400791401000}, "question": "Which code output below\r\n[code]\r\n<?php\r\n    $foo = null;\r\n    $bar = new stdClass;\r\n    var_dump(isset($foo), isset($bar), isset($baz));\r\n[/code]", "id": 107, "id_google": 1254, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "Fatal error", "id": 1032, "question_id": 108}, {"is_correct": false, "alternative": "\u201cmenu\u201d", "id": 1033, "question_id": 108}, {"is_correct": true, "alternative": "\u201d====ZCE day!====\u201c", "id": 1034, "question_id": 108}, {"is_correct": false, "alternative": "None above", "id": 1035, "question_id": 108}], "created_at": {"$date": 1400797155000}, "question": "Which code output:\r\n[code]\r\n<?php\r\nfunction menu()\r\n{\r\n  return \"====ZCE day!====\";\r\n}\r\n\r\n$foo = \"menu\";\r\necho $foo();\r\n?>\r\n[/code]", "id": 108, "id_google": 1253, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "true", "id": 1036, "question_id": 109}, {"is_correct": false, "alternative": "false", "id": 1037, "question_id": 109}, {"is_correct": true, "alternative": "Error", "id": 1038, "question_id": 109}, {"is_correct": false, "alternative": "\u201cZend Compiler Hip Hop\u201d", "id": 1039, "question_id": 109}], "created_at": {"$date": 1400877144000}, "question": "Which code output below :\r\n[code]\r\n<?php\r\n    $foo = \"Zend Compiler\";\r\n    $2foo = \"Hip Hop\";\r\n    return $foo > $2foo;\r\n[/code]\r\n", "id": 109, "id_google": 1252, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "true", "id": 1040, "question_id": 110}, {"is_correct": false, "alternative": "false", "id": 1041, "question_id": 110}, {"is_correct": false, "alternative": "23", "id": 1042, "question_id": 110}, {"is_correct": false, "alternative": "None above", "id": 1043, "question_id": 110}], "created_at": {"$date": 1400877259000}, "question": "Which code output \r\n[code]\r\n<?php\r\n    $cloud = 23;\r\n    $zce   = true;\r\n    return $cloud == true;\r\n[/code]\r\n", "id": 110, "id_google": 1250, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "Fatal error ", "id": 606, "question_id": 111}, {"is_correct": false, "alternative": "18", "id": 607, "question_id": 111}, {"is_correct": true, "alternative": "16", "id": 608, "question_id": 111}, {"is_correct": false, "alternative": "25", "id": 609, "question_id": 111}], "created_at": {"$date": 1400877434000}, "question": "What is the output \r\n[code]\r\n<? php \r\n\u00a0\u00a0\u00a0\u00a0 $foo = 017; \r\n\u00a0\u00a0\u00a0\u00a0 echo $foo + 1; \r\n[/code]", "id": 111, "id_google": 1247, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "Fatal error", "id": 610, "question_id": 112}, {"is_correct": false, "alternative": "Object id #XX", "id": 611, "question_id": 112}, {"is_correct": false, "alternative": "TRUE", "id": 612, "question_id": 112}, {"is_correct": false, "alternative": "My content", "id": 613, "question_id": 112}, {"is_correct": false, "alternative": "NULL", "id": 614, "question_id": 112}, {"is_correct": false, "alternative": "None of the above", "id": 615, "question_id": 112}], "created_at": {"$date": 1400877675000}, "question": "What is the output of this code ?\r\n[code]\r\n<?php\r\nclass Car\r\n{\r\n    public function __toString() \r\n    {\r\n        echo 'My content';\r\n    }\r\n}\r\n\r\n$oCar = new Car();\r\necho $oCar;\r\n[/code]", "id": 112, "id_google": 1249, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "array()", "id": 616, "question_id": 113}, {"is_correct": false, "alternative": "continue", "id": 617, "question_id": 113}, {"is_correct": false, "alternative": "echo()", "id": 618, "question_id": 113}, {"is_correct": false, "alternative": "print()", "id": 619, "question_id": 113}, {"is_correct": false, "alternative": "eval()", "id": 620, "question_id": 113}, {"is_correct": false, "alternative": "exit()", "id": 621, "question_id": 113}, {"is_correct": true, "alternative": "All of the above", "id": 622, "question_id": 113}], "created_at": {"$date": 1400877780000}, "question": "Which of these elements are language constructs?", "id": 113, "id_google": 1125, "answer": "", "type_question": 1}, {"comment": "", "id_category": 5, "alternatives": [{"is_correct": false, "alternative": "Fatal error, you can't convert a string to a resource", "id": 623, "question_id": 114}, {"is_correct": true, "alternative": "Resource id #XX", "id": 624, "question_id": 114}, {"is_correct": false, "alternative": "TRUE", "id": 625, "question_id": 114}, {"is_correct": false, "alternative": "$var is equal to FALSE", "id": 626, "question_id": 114}], "created_at": {"$date": 1401113021000}, "question": "What is the content of the variable $var ?\r\n[code]\r\n<?php\r\n$fp = fopen('index.php', 'r'); \r\n$var = (string) $fp;\r\n[/code]", "id": 114, "id_google": 1248, "answer": "", "type_question": 1}, {"comment": "   ", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "print preg_replace(\"/img=(\\w+)/\", '<img src=\"\\1\">', $text);", "id": 639, "question_id": 115}, {"is_correct": true, "alternative": "print preg_replace(\"/img=(\\S+)/\", '<img src=\"\\1\">', $text);", "id": 640, "question_id": 115}, {"is_correct": false, "alternative": "print preg_replace(\"/img=(\\s+)/\", '<img src=\"\\1\">', $text);", "id": 641, "question_id": 115}, {"is_correct": false, "alternative": "print preg_replace(\"/img=(\\w)+/\", '<img src=\"\\1\">', $text);", "id": 642, "question_id": 115}], "created_at": {"$date": 1401130960000}, "question": "Which question will replace markup such as img=/smiley.png with <img src=\u201d/smiley.png\u201d>? ", "id": 115, "id_google": 1232, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "// foo", "id": 643, "question_id": 116}, {"is_correct": false, "alternative": "/* bar */", "id": 644, "question_id": 116}, {"is_correct": false, "alternative": "# baz", "id": 645, "question_id": 116}, {"is_correct": true, "alternative": "None above", "id": 646, "question_id": 116}], "created_at": {"$date": 1401135621000}, "question": "Qual dos seguintes coment\u00e1rios \u00e9 inv\u00e1lido em php?", "id": 116, "id_google": 1246, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "MyFramework\\MyNamespace\\MyClass\\myMethod", "id": 1052, "question_id": 117}, {"is_correct": true, "alternative": "MyFramework\\MyNamespace\\MyClass::myMethod", "id": 1053, "question_id": 117}, {"is_correct": false, "alternative": "MyFramework\\MyNamespace\\myMethod", "id": 1054, "question_id": 117}, {"is_correct": false, "alternative": "MyClass::myMethod", "id": 1055, "question_id": 117}], "created_at": {"$date": 1401137673000}, "question": "Which code output below\r\n[code]\r\n<?php\r\nnamespace MyFramework\\MyNamespace;\r\nclass MyClass\r\n{\r\n    public function myMethod()\r\n    {\r\n        return __METHOD__;\r\n    }\r\n}\r\n$foo = new MyClass;\r\necho $foo->myMethod();\r\n?>\r\n[/code]", "id": 117, "id_google": 1243, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "<<<PHP_COMMENT PHP_COMMENT;", "id": 651, "question_id": 118}, {"is_correct": true, "alternative": "// ..", "id": 652, "question_id": 118}, {"is_correct": true, "alternative": " /* */", "id": 653, "question_id": 118}, {"is_correct": true, "alternative": "#", "id": 654, "question_id": 118}], "created_at": {"$date": 1401137745000}, "question": " What type of comments is supported by PHP?", "id": 118, "id_google": 1244, "answer": "", "type_question": 3}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "Singleton Pattern ", "id": 655, "question_id": 119}, {"is_correct": false, "alternative": "Model View Controller Pattern ", "id": 656, "question_id": 119}, {"is_correct": true, "alternative": "Registry Pattern ", "id": 657, "question_id": 119}, {"is_correct": false, "alternative": "Factory Pattern ", "id": 658, "question_id": 119}, {"is_correct": false, "alternative": "FactoryStore Pattern ", "id": 659, "question_id": 119}], "created_at": {"$date": 1401138191000}, "question": "If I want to store a global information that not represents an object state, I can use the... ", "id": 119, "id_google": 1233, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": "array_split", "id": 1024, "question_id": 120}, {"is_correct": true, "alternative": "array_reverse", "id": 1025, "question_id": 120}, {"is_correct": false, "alternative": "ksort", "id": 1026, "question_id": 120}, {"is_correct": false, "alternative": "sort", "id": 1027, "question_id": 120}], "created_at": {"$date": 1401138238000}, "question": "Which php function inverts the values of an array without changing the keys?", "id": 120, "id_google": 1242, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "Error Message", "id": 664, "question_id": 121}, {"is_correct": true, "alternative": "7", "id": 665, "question_id": 121}, {"is_correct": false, "alternative": "0", "id": 666, "question_id": 121}, {"is_correct": false, "alternative": "8", "id": 667, "question_id": 121}], "created_at": {"$date": 1401138413000}, "question": "What would be output of following code:\r\n[code]\r\n<?php \r\necho (int) ((0.7 + 0.1) * '10th');\r\n[/code]", "id": 121, "id_google": 0, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 4, "alternatives": [{"is_correct": true, "alternative": "6", "id": 1048, "question_id": 122}, {"is_correct": false, "alternative": "9", "id": 1049, "question_id": 122}, {"is_correct": false, "alternative": "0", "id": 1050, "question_id": 122}, {"is_correct": false, "alternative": "None of above", "id": 1051, "question_id": 122}], "created_at": {"$date": 1401138772000}, "question": "Which code output below:\r\n[code]\r\n<?php\r\nclass A\r\n{\r\n    private $foo;\r\n    public function __construct($foo)\r\n    {\r\n        $this->foo = $foo;\r\n    }\r\n    public function bar()\r\n    {\r\n        return function($x) {\r\n            return $this->foo * $x;\r\n        };\r\n    }\r\n}\r\n\r\n$a = new A(2);\r\n$a->bar = function ($x) {\r\n    return $x * $x;\r\n};\r\n$m = $a->bar();\r\necho $m(3);\r\n?>\r\n[/code]", "id": 122, "id_google": 1236, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": "2,3,4", "id": 1044, "question_id": 123}, {"is_correct": true, "alternative": "2,3,6", "id": 1045, "question_id": 123}, {"is_correct": false, "alternative": "1,2,3", "id": 1046, "question_id": 123}, {"is_correct": false, "alternative": "0,0,0", "id": 1047, "question_id": 123}], "created_at": {"$date": 1401138920000}, "question": "Which code output below\r\n[code]\r\n<?php\r\nfunction  update(&$array)\r\n{\r\n    foreach ($array as &$value) {\r\n        $value = $value + 1;\r\n    }\r\n    $value = $value + 2;\r\n}\r\n\r\n$valores = array(1,2,3);\r\nupdate($valores);\r\n?>\r\n[/code]", "id": 123, "id_google": 1241, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": true, "alternative": "true", "id": 676, "question_id": 124}, {"is_correct": false, "alternative": "false", "id": 677, "question_id": 124}], "created_at": {"$date": 1401139011000}, "question": "What is the output:\r\n[code]\r\n<?php\r\n    var_dump(boolval(new \\StdClass));\r\n?>\r\n[/code]", "id": 124, "id_google": 1240, "answer": "", "type_question": 1}, {"comment": "", "id_category": 8, "alternatives": [{"is_correct": false, "alternative": "$_ENV ", "id": 678, "question_id": 125}, {"is_correct": false, "alternative": "$_GET ", "id": 679, "question_id": 125}, {"is_correct": false, "alternative": "$_COOKIE ", "id": 680, "question_id": 125}, {"is_correct": true, "alternative": "$_SERVER ", "id": 681, "question_id": 125}, {"is_correct": false, "alternative": "$_SESSION ", "id": 682, "question_id": 125}], "created_at": {"$date": 1401139853000}, "question": "Which of the following list of potential data sources should be considered trusted? ", "id": 125, "id_google": 1234, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "Never use include or require statements that include files based on pathnames taken from user input (e.g.: include \"$username/script.txt\";) ", "id": 683, "question_id": 126}, {"is_correct": true, "alternative": "Disable \"allow_url_fopen\" unless it is required for the site to function ", "id": 684, "question_id": 126}, {"is_correct": false, "alternative": "Avoid using extensions like curl, which opens remote connections ", "id": 685, "question_id": 126}, {"is_correct": true, "alternative": "Use functions such as \"strip_tags()\" on input taken from one user and displayed to another ", "id": 686, "question_id": 126}, {"is_correct": false, "alternative": "Use the \"filtering()\" function to filter data coming from the user ", "id": 687, "question_id": 126}], "created_at": {"$date": 1401139997000}, "question": "To prevent cross-site scripting attacks, one should do the following: ", "id": 126, "id_google": 1235, "answer": "", "type_question": 3}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "text, radio and checkbox ", "id": 688, "question_id": 127}, {"is_correct": false, "alternative": "text, submit and hidden ", "id": 689, "question_id": 127}, {"is_correct": false, "alternative": "submit and hidden ", "id": 690, "question_id": 127}, {"is_correct": true, "alternative": "radio and checkbox ", "id": 691, "question_id": 127}], "created_at": {"$date": 1401143066000}, "question": "Which types of form elements can be excluded from the HTTP request?", "id": 127, "id_google": 1231, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "use myapp\\utils\\hello ", "id": 692, "question_id": 128}, {"is_correct": false, "alternative": "use utils\\hello\\Hello ", "id": 693, "question_id": 128}, {"is_correct": true, "alternative": "use myapp\\utils\\hello\\Hello ", "id": 694, "question_id": 128}, {"is_correct": false, "alternative": "use utils\\hello ", "id": 695, "question_id": 128}, {"is_correct": false, "alternative": "use myapp\\utils\\hello\\Hello::world ", "id": 696, "question_id": 128}], "created_at": {"$date": 1401143347000}, "question": "Looking to the code below, what should be placed in the blank spot to run the code? \r\n[code]\r\n<?php \r\n// hello.php file \r\nnamespace myapp\\utils\\hello; \r\n\r\nclass Hello \r\n{ \r\n    public static function world() \r\n    { \r\n        return 'This is SPARTA!!!'; \r\n    } \r\n} \r\n?> \r\n---------------------------------- \r\n<?php \r\n// myapp.php file \r\nnamespace myapp; \r\n\r\ninclude 'test.php'; \r\n\r\n__________________; \r\n\r\necho Hello::world(); \r\n?> \r\n[/code]", "id": 128, "id_google": 1229, "answer": "", "type_question": 1}, {"comment": "", "id_category": 8, "alternatives": [{"is_correct": false, "alternative": "Yes, it is secure. It checks for $isAdmin to be True before executing protected operations ", "id": 697, "question_id": 129}, {"is_correct": false, "alternative": "No, it is not secure because it doesn\u2019t make sure $action is valid input ", "id": 698, "question_id": 129}, {"is_correct": true, "alternative": "No, it is not secure because $isAdmin can be hijacked by exploiting \"register_globals\" ", "id": 699, "question_id": 129}, {"is_correct": false, "alternative": "Yes, it is secure because it validates the user-data $data ", "id": 700, "question_id": 129}], "created_at": {"$date": 1401143471000}, "question": "Consider the following code snippet. Is this code acceptable from a security standpoint? \r\nAssume that the $action and $data variables are designed to be accepted from the user and \"register_globals\" is enabled. \r\n[code]\r\n<?php \r\nif(isUserAdmin()) { $isAdmin = true; } \r\n\r\n$data = validate_and_return_input($data); \r\n\r\nswitch($action){ \r\n    case 'add': \r\n        addSomething($data); \r\n        break; \r\n    case 'delete': \r\n        if($isAdmin) {deleteSomething($data);} \r\n        break; \r\n    case 'edit': \r\n        if($isAdmin) {editSomething($data);} \r\n        break; \r\n    default: \r\n        print \u201cBad Action.\u201d; \r\n} \r\n?> \r\n[/code]", "id": 129, "id_google": 1230, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "call", "id": 701, "question_id": 130}, {"is_correct": false, "alternative": "soapCall", "id": 702, "question_id": 130}, {"is_correct": true, "alternative": "__soapCall", "id": 703, "question_id": 130}, {"is_correct": false, "alternative": "_", "id": 704, "question_id": 130}, {"is_correct": false, "alternative": "callback", "id": 705, "question_id": 130}], "created_at": {"$date": 1401143607000}, "question": "Which function is missing to complete the source code below, given the fact that myMethod and its parameters are defined in the WSDL file?\r\n[code]\r\n<?php\r\n$aParam = array(1, 'myParam', 'Foo');\r\n$rSoap = new SoapClient('myfile.wsdl');\r\n$rSoap->..........('myMethod', $aParam);\r\n[/code]", "id": 130, "id_google": 1027, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "No, because PHP is server-side, and JavaScript is client-side. ", "id": 706, "question_id": 131}, {"is_correct": false, "alternative": "No, because PHP is a loosely typed language. ", "id": 707, "question_id": 131}, {"is_correct": false, "alternative": "Yes, because JavaScript executes before PHP. ", "id": 708, "question_id": 131}, {"is_correct": true, "alternative": "Yes, because PHP can generate valid JavaScript. ", "id": 709, "question_id": 131}], "created_at": {"$date": 1401143642000}, "question": "Is it possible to pass data from PHP to JavaScript?", "id": 131, "id_google": 1228, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "Yes, but not without sending another HTTP request. ", "id": 710, "question_id": 132}, {"is_correct": false, "alternative": "Yes, because PHP executes before JavaScript. ", "id": 711, "question_id": 132}, {"is_correct": false, "alternative": "No, because JavaScript is server-side, and PHP is client-side. ", "id": 712, "question_id": 132}, {"is_correct": false, "alternative": "No, because JavaScript executes before PHP. ", "id": 713, "question_id": 132}], "created_at": {"$date": 1401143677000}, "question": "Is it possible to pass data from JavaScript to PHP? ", "id": 132, "id_google": 1227, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": false, "alternative": "MySQL ", "id": 714, "question_id": 133}, {"is_correct": false, "alternative": "IBM DB/2 ", "id": 715, "question_id": 133}, {"is_correct": false, "alternative": "PostgreSQL", "id": 716, "question_id": 133}, {"is_correct": false, "alternative": "Microsoft SQL Server ", "id": 717, "question_id": 133}, {"is_correct": true, "alternative": "None of the above ", "id": 718, "question_id": 133}], "created_at": {"$date": 1401143825000}, "question": "Which of the following DBMSs do not have a native PHP extension? ", "id": 133, "id_google": 1225, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": false, "alternative": "Indexing the ID column ", "id": 719, "question_id": 134}, {"is_correct": false, "alternative": "Indexing the NAME and ADDRESS1 columns ", "id": 720, "question_id": 134}, {"is_correct": true, "alternative": "Indexing the ID column, and then the NAME and ZIPCODE columns separately ", "id": 721, "question_id": 134}, {"is_correct": false, "alternative": "Indexing the ZIPCODE and NAME columns ", "id": 722, "question_id": 134}, {"is_correct": false, "alternative": "Indexing the ZIPCODE column with a full-text index ", "id": 723, "question_id": 134}], "created_at": {"$date": 1401143998000}, "question": "Consider the following database table and query. Which of the indexes below will help speed up the process of executing the query? \r\n\r\nCREATE TABLE MYTABLE ( \r\n    ID INT, \r\n    NAME VARCHAR (100), \r\n    ADDRESS1 VARCHAR (100), \r\n    ADDRESS2 VARCHAR (100), \r\n    ZIPCODE VARCHAR (10), \r\n    CITY VARCHAR (50), \r\n    PROVINCE VARCHAR (2) \r\n); \r\n\r\nSELECT ID, NAME \r\nFROM MYTABLE \r\nWHERE ID BETWEEN 0 AND 100 \r\nORDER BY NAME, ZIPCODE \r\n", "id": 134, "id_google": 1226, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "After exactly 1,440 seconds ", "id": 724, "question_id": 135}, {"is_correct": true, "alternative": "After the number of seconds specified in the \"session.gc_maxlifetime\" INI setting ", "id": 725, "question_id": 135}, {"is_correct": false, "alternative": "It will never expire unless it is manually deleted ", "id": 726, "question_id": 135}, {"is_correct": false, "alternative": "It will only expire when the browser is restarted ", "id": 727, "question_id": 135}, {"is_correct": false, "alternative": "None of the above ", "id": 728, "question_id": 135}], "created_at": {"$date": 1401144285000}, "question": "Assuming that the client browser is never restarted, how long after the last access will a session \u201cexpire\u201d and be subject to garbage collection? ", "id": 135, "id_google": 1224, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "It will print \"3\" ", "id": 729, "question_id": 136}, {"is_correct": false, "alternative": "It will print \"error\"", "id": 730, "question_id": 136}, {"is_correct": false, "alternative": "It will print \"7\" ", "id": 731, "question_id": 136}, {"is_correct": true, "alternative": "It will give an Fatal Error ", "id": 732, "question_id": 136}], "created_at": {"$date": 1401144568000}, "question": "What happens when I execute the following code? \r\n[code]\r\n<?php \r\nnamespace Foo; \r\n\r\nfunction strlen() {} \r\nconst INI_ALL = 3; \r\n\r\n$a = strlen('hi'); \r\n$b = INI_ALL; \r\ntry \r\n{ \r\n    if ($a == 2) \r\n        echo INI_ALL; \r\n    else \r\n        throw new Exception('error'); \r\n} \r\ncatch (Exception $e) \r\n{ \r\n    echo $e->getMessage(); \r\n} \r\n?> \r\n[/code]", "id": 136, "id_google": 1223, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "The filesystem ", "id": 733, "question_id": 137}, {"is_correct": false, "alternative": "A database ", "id": 734, "question_id": 137}, {"is_correct": false, "alternative": "Virtual memory ", "id": 735, "question_id": 137}, {"is_correct": false, "alternative": "Shared memory ", "id": 736, "question_id": 137}, {"is_correct": false, "alternative": "None of the above ", "id": 737, "question_id": 137}], "created_at": {"$date": 1401144602000}, "question": "By default, PHP stores session data in... ", "id": 137, "id_google": 1222, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [], "created_at": {"$date": 1401144868000}, "question": "What the following code will print out?\r\n\r\necho true ? 'a' : true ? 'b' : 'c';", "id": 138, "id_google": 1209, "answer": "b", "type_question": 2}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "No! Only at the end of \"switch\" statement", "id": 738, "question_id": 139}, {"is_correct": true, "alternative": "Yes! It goes where ever you want!", "id": 739, "question_id": 139}, {"is_correct": false, "alternative": "No! It can be in the middle and the end, but not in the beginning", "id": 740, "question_id": 139}], "created_at": {"$date": 1401145109000}, "question": "Can we use the \"default\" keyword at any place in a \"switch\" statement? (Example below)\r\n[code]\r\n<?php\r\n$a = 12;\r\nswitch($a)\r\n{\r\n    default: echo 'YEAH'; break;\r\n    case 12: echo 'TWELVE'; break;\r\n    case 10: echo 'TEN'; break;\r\n}\r\n?>\r\n[/code]", "id": 139, "id_google": 1221, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "They are combined in an array and stored in the appropriate superglobal array ", "id": 741, "question_id": 140}, {"is_correct": false, "alternative": "The value of the second element is added to the value of the first in the appropriate superglobal array ", "id": 742, "question_id": 140}, {"is_correct": true, "alternative": "The value of the second element overwrites the value of the first in the appropriate superglobal array ", "id": 743, "question_id": 140}, {"is_correct": false, "alternative": "The second element is automatically renamed ", "id": 744, "question_id": 140}, {"is_correct": false, "alternative": "The second element is automatically renamed ", "id": 745, "question_id": 140}], "created_at": {"$date": 1401145262000}, "question": "What happens when a form submitted to a PHP script contains two elements with the same name? ", "id": 140, "id_google": 1220, "answer": "", "type_question": 1}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "echo chr($val);", "id": 746, "question_id": 141}, {"is_correct": false, "alternative": "echo asc($val);", "id": 747, "question_id": 141}, {"is_correct": false, "alternative": "echo substr($alpha, $val, 2);", "id": 748, "question_id": 141}, {"is_correct": true, "alternative": "echo $alpha{$val};", "id": 749, "question_id": 141}, {"is_correct": false, "alternative": "echo $alpha{$val+1};", "id": 750, "question_id": 141}], "created_at": {"$date": 1401145489000}, "question": "Consider the following script. What line of code should be inserted in the marked location in order to display the string \"php\" when this script is executed?\r\n[code]\r\n<?php\r\n$alpha = 'abcdefghijklmnopqrstuvwxyz';\r\n$letters = array(15, 7, 15);\r\nforeach($letters as $val) {\r\n    /* What should be here */\r\n}\r\n?>\r\n[/code]\r\nA: \r\nB: \r\nC: \r\nD: \r\nE: ", "id": 141, "id_google": 1213, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "Nothing", "id": 751, "question_id": 142}, {"is_correct": false, "alternative": "Array", "id": 752, "question_id": 142}, {"is_correct": true, "alternative": "A Notice ", "id": 753, "question_id": 142}, {"is_correct": false, "alternative": "phpgreat", "id": 754, "question_id": 142}, {"is_correct": false, "alternative": "greatphp", "id": 755, "question_id": 142}], "created_at": {"$date": 1401145613000}, "question": "Consider the following form and subsequent script. What will the script print out if the user types the word \"php\" and \"great\" in the two text boxes respectively? \r\n\r\n<form action=\"index.php\" method=\"post\"> \r\n<input type=\"text\" name=\"element[]\"> \r\n<input type=\"text\" name=\"element[]\"> \r\n</form> \r\n[code]\r\n// index.php \r\n<?php \r\necho $_GET['element']; \r\n?> \r\n[/code]", "id": 142, "id_google": 1219, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "It expires right away ", "id": 756, "question_id": 143}, {"is_correct": false, "alternative": "It never expires ", "id": 757, "question_id": 143}, {"is_correct": false, "alternative": "It is not set ", "id": 758, "question_id": 143}, {"is_correct": true, "alternative": "It expires at the end of the user\u2019s browser session ", "id": 759, "question_id": 143}, {"is_correct": false, "alternative": "It expires only if the script doesn\u2019t create a server-side session ", "id": 760, "question_id": 143}], "created_at": {"$date": 1401145695000}, "question": "If no expiration time is explicitly set for a cookie, what happens to it? ", "id": 143, "id_google": 1218, "answer": "", "type_question": 1}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": " .*", "id": 761, "question_id": 144}, {"is_correct": false, "alternative": "...|..........", "id": 762, "question_id": 144}, {"is_correct": false, "alternative": "\\d{3}\\|\\d{10}", "id": 763, "question_id": 144}, {"is_correct": false, "alternative": "[az]{3}\\|[az]{10}", "id": 764, "question_id": 144}, {"is_correct": true, "alternative": "[a-z][a-z][a-z]\\|\\w{10}", "id": 765, "question_id": 144}], "created_at": {"$date": 1401147643000}, "question": "Which of the following PCRE regular expressions best matches the string php|conference?", "id": 144, "id_google": 1214, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "The value is: Dog", "id": 766, "question_id": 145}, {"is_correct": false, "alternative": "The value is: Cat", "id": 767, "question_id": 145}, {"is_correct": false, "alternative": "The value is: Human", "id": 768, "question_id": 145}, {"is_correct": false, "alternative": "The value is: 10", "id": 769, "question_id": 145}, {"is_correct": false, "alternative": "A parse error occurs", "id": 770, "question_id": 145}], "created_at": {"$date": 1401147800000}, "question": "What is displayed when the following script is executed?\r\n[code]\r\n<?php\r\ndefine('myvalue', \"10\");\r\n\r\n$myarray[10] = \"Dog\";\r\n$myarray[] = \"Human\";\r\n$myarray['myvalue'] = \"Cat\";\r\n$myarray[\"Dog\"] = \"Cat\";\r\n\r\nprint \"The value is: \";\r\nprint $myarray[myvalue].\"\\n\";\r\n?>\r\n[/code]", "id": 145, "id_google": 1210, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "The interpreter outputs a type mismatch error", "id": 771, "question_id": 146}, {"is_correct": true, "alternative": "The string is converted to a number and added to the integer ", "id": 772, "question_id": 146}, {"is_correct": false, "alternative": "The string is discarded and the integer is preserved", "id": 773, "question_id": 146}, {"is_correct": false, "alternative": "The integer and string are concatenated together in a new string", "id": 774, "question_id": 146}, {"is_correct": false, "alternative": "The integer is discarded and the string is preserved", "id": 775, "question_id": 146}], "created_at": {"$date": 1401147897000}, "question": "What happens if you add a string to an integer using the + operator?", "id": 146, "id_google": 1217, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": "foreach($result as $key => $val)", "id": 776, "question_id": 147}, {"is_correct": false, "alternative": "while($idx *= 2)", "id": 777, "question_id": 147}, {"is_correct": true, "alternative": "for($idx = 1; $idx < STOP_AT; $idx *= 2)", "id": 778, "question_id": 147}, {"is_correct": false, "alternative": "for($idx *= 2; STOP_AT >= $idx; $idx = 0)", "id": 779, "question_id": 147}, {"is_correct": false, "alternative": "while($idx < STOP_AT) do $idx *= 2", "id": 780, "question_id": 147}], "created_at": {"$date": 1401148041000}, "question": "Considering the following segment of code, what should go in the marked segment to produce the following array output?\r\n[code]\r\n<?php\r\ndefine(\"STOP_AT\", 1024);\r\n\r\n$result = array();\r\n\r\n/* Missing code */\r\n{\r\n    $result[] = $idx;\r\n}\r\n\r\nprint_r($result);\r\n?>\r\n\r\n// Output\r\nArray{\r\n    [0] => 1,\r\n    [1] => 2, \r\n    [2] => 4,\r\n    [3] => 8,\r\n    [4] => 16,\r\n    [5] => 32,\r\n    [6] => 64,\r\n    [7] => 128,\r\n    [8] => 256,\r\n    [9] => 512\r\n}\r\n[/code]", "id": 147, "id_google": 1211, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "a1, a3, a5, a10, a20", "id": 781, "question_id": 148}, {"is_correct": false, "alternative": "a1, a20, a3, a5, a10", "id": 782, "question_id": 148}, {"is_correct": false, "alternative": "a10, a1, a20, a3, a5", "id": 783, "question_id": 148}, {"is_correct": false, "alternative": "a1, a10, a5, a20, a3", "id": 784, "question_id": 148}, {"is_correct": false, "alternative": " a1, a10, a20, a3, a5", "id": 785, "question_id": 148}], "created_at": {"$date": 1401148153000}, "question": "In what order will the following script output the contents of the $array array?\r\n[code]\r\n<?php\r\n$array = array ('a1', 'a3', 'a5', 'a10', 'a20');\r\nnatsort ($array);\r\nvar_dump ($array);\r\n?>\r\n[/code]", "id": 148, "id_google": 1212, "answer": "", "type_question": 1}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "12345", "id": 786, "question_id": 149}, {"is_correct": true, "alternative": "12245", "id": 787, "question_id": 149}, {"is_correct": false, "alternative": "22345", "id": 788, "question_id": 149}, {"is_correct": false, "alternative": "11345", "id": 789, "question_id": 149}, {"is_correct": false, "alternative": "Array", "id": 790, "question_id": 149}], "created_at": {"$date": 1401148355000}, "question": "What will be the output of the following script?\r\n[code]\r\n<?php\r\n$s = '12345';\r\n$s[$s[1]] = '2';\r\necho $s;\r\n?>\r\n[/code]", "id": 149, "id_google": 1215, "answer": "", "type_question": 1}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "******123", "id": 791, "question_id": 150}, {"is_correct": false, "alternative": "*****_1234", "id": 792, "question_id": 150}, {"is_correct": true, "alternative": "******1234", "id": 793, "question_id": 150}, {"is_correct": true, "alternative": "_*1234", "id": 794, "question_id": 150}, {"is_correct": false, "alternative": "_*123", "id": 795, "question_id": 150}], "created_at": {"$date": 1401148481000}, "question": "Which of the strings below will be matched by the following PCRE regular expression?\r\n(Choose 2)\r\n\r\n/.*\\*123\\d/\r\n", "id": 150, "id_google": 1216, "answer": "", "type_question": 3}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "ConferencePHP", "id": 796, "question_id": 151}, {"is_correct": false, "alternative": "PHP Conference", "id": 797, "question_id": 151}, {"is_correct": false, "alternative": "Conference PHP", "id": 798, "question_id": 151}, {"is_correct": false, "alternative": "Conference", "id": 799, "question_id": 151}], "created_at": {"$date": 1401148647000}, "question": "What is the output of the following code?\r\n[code]\r\n<?php \r\nfunction pears(Array $pears)\r\n{\r\n    if (count($pears) > 0)\r\n    {\r\n        echo array_pop($pears);\r\n        pears($pears);\r\n    }\r\n}\r\n\r\n$fruit = array(\"PHP\", \"Conference\");\r\npears($fruit);\r\n?>\r\n[/code]", "id": 151, "id_google": 1208, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "The xml isn't correct and an exception will be thrown", "id": 800, "question_id": 152}, {"is_correct": true, "alternative": "$b is an array containing 2 SimpleXml objects representing the acl tags for which the value of the attribute id is bigger than 7", "id": 801, "question_id": 152}, {"is_correct": false, "alternative": "The xpath expression isn't correct and an exception will be thrown", "id": 802, "question_id": 152}, {"is_correct": false, "alternative": "$b is equal to null", "id": 803, "question_id": 152}], "created_at": {"$date": 1401203303000}, "question": " What is the result when running the code above?\r\n[code]\r\n<?php\r\n$sXml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n  <configenv>\r\n    <production>\r\n        <acl name=\"userTest\" id=\"3\" />\r\n    </production>\r\n    <staging>\r\n        <acl name=\"userTest\" id=\"10\" />\r\n        <acl name=\"userTest\" id=\"7\" />\r\n    </staging>\r\n    <testing>\r\n        <acl name=\"userTest\" id=\"1\" />\r\n        <acl name=\"userTest\" id=\"20\" />\r\n    </testing>\r\n  </configenv>';\r\n\r\n$oXmlElement = new SimpleXmlElement($sXml);\r\n$b = $oXmlElement->xpath('*/acl[@id > 7]');\r\n[/code]\r\n\r\n", "id": 152, "id_google": 1206, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": " It provides code reusability. ", "id": 804, "question_id": 153}, {"is_correct": false, "alternative": "It provides code security. ", "id": 805, "question_id": 153}, {"is_correct": false, "alternative": "Data can be accessed only by calling methods. ", "id": 806, "question_id": 153}, {"is_correct": true, "alternative": "It provides code flexibility by allowing access of data to other code outside the package. ", "id": 807, "question_id": 153}], "created_at": {"$date": 1401223653000}, "question": "Which of the following is not an advantage of encapsulation? ", "id": 153, "id_google": 1201, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [], "created_at": {"$date": 1401223805000}, "question": "[code]\r\n<?php\r\n$a = 'myVar';\r\n\r\nswitch ($a) {\r\n  case 0:\r\n  \techo 'case 0';\r\n\t\r\n  case 'myVar':\r\n  \techo 'case myVar';\r\n\r\n  case 'nothing':\r\n  \techo 'case nothing';\r\n}\r\n[/code]", "id": 154, "id_google": 1024, "answer": "case 0case myVarcase nothing", "type_question": 2}, {"comment": "", "id_category": 6, "alternatives": [], "created_at": {"$date": 1401223951000}, "question": "What method is used to set the time in the DateTime class ?", "id": 155, "id_google": 1205, "answer": "dateTime", "type_question": 2}, {"comment": "", "id_category": 6, "alternatives": [], "created_at": {"$date": 1401224056000}, "question": "What is the output of the following script ?\r\n[code]\r\n<?php \r\n$i = 4; \r\necho $i >> 2; \r\n\r\n$i = 4; \r\necho $i >> 3; \r\n\r\n$i = 4; \r\necho $i >> 4;\r\n[/code]", "id": 156, "id_google": 1202, "answer": "100", "type_question": 2}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "0", "id": 808, "question_id": 157}, {"is_correct": false, "alternative": "8", "id": 809, "question_id": 157}, {"is_correct": false, "alternative": "7", "id": 810, "question_id": 157}, {"is_correct": true, "alternative": "15", "id": 811, "question_id": 157}], "created_at": {"$date": 1401224345000}, "question": "How many elements have a variable $mathes the end of the script?\r\n[code]\r\n<?php\r\n$matches = preg_split('/(\\s)/', '1 2 3 4 5 6 7 8', -1 ,PREG_SPLIT_DELIM_CAPTURE ); \r\nvar_dump($matches);\r\n?>\r\n[/code]", "id": 157, "id_google": 1203, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": true, "alternative": "True", "id": 812, "question_id": 158}, {"is_correct": false, "alternative": "False", "id": 813, "question_id": 158}], "created_at": {"$date": 1401224520000}, "question": "Identify whether the given statement is true or false. \r\n\u201cA Cartesian product is generated when a join between two or more tables is defined without specifying any join condition.\u201d \r\n", "id": 158, "id_google": 1200, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": false, "alternative": "True", "id": 814, "question_id": 159}, {"is_correct": true, "alternative": "False", "id": 815, "question_id": 159}], "created_at": {"$date": 1401224622000}, "question": "Identify whether the given statement is true or false. \r\n\"The IN operator cannot be used in a condition that involves an outer join.\" ", "id": 159, "id_google": 1199, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": false, "alternative": "CROSS JOIN", "id": 816, "question_id": 160}, {"is_correct": false, "alternative": "INNER JOIN", "id": 817, "question_id": 160}, {"is_correct": true, "alternative": "FULL OUTER JOIN", "id": 818, "question_id": 160}, {"is_correct": false, "alternative": "RIGHT OUTER JOIN", "id": 819, "question_id": 160}, {"is_correct": false, "alternative": "LEFT OUTER JOIN", "id": 820, "question_id": 160}], "created_at": {"$date": 1401224806000}, "question": "Which of the following joins returns all rows from the left and right tables in a join expression even if the data values in the joined columns do not match?", "id": 160, "id_google": 1198, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": "0", "id": 821, "question_id": 161}, {"is_correct": false, "alternative": "hello1234", "id": 822, "question_id": 161}, {"is_correct": false, "alternative": "hello334", "id": 823, "question_id": 161}, {"is_correct": true, "alternative": "234", "id": 824, "question_id": 161}], "created_at": {"$date": 1401224976000}, "question": "What will be the output of the following code snippet?\r\n[code]\r\n<?php\r\necho 'hello ' . 1 + 2 . '34';\r\n?>\r\n[/code]", "id": 161, "id_google": 1182, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": true, "alternative": "Self join", "id": 825, "question_id": 162}, {"is_correct": false, "alternative": "Non-equijoin", "id": 826, "question_id": 162}, {"is_correct": false, "alternative": "Outer join", "id": 827, "question_id": 162}, {"is_correct": false, "alternative": "Equijoin", "id": 828, "question_id": 162}, {"is_correct": false, "alternative": "Cross join", "id": 829, "question_id": 162}, {"is_correct": false, "alternative": "Left outer join", "id": 830, "question_id": 162}], "created_at": {"$date": 1401225065000}, "question": "Which of the following joins is used to join a table to itself?", "id": 162, "id_google": 1197, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "Array ([1] => a [2] => b)", "id": 831, "question_id": 163}, {"is_correct": false, "alternative": "bool(true)", "id": 832, "question_id": 163}, {"is_correct": false, "alternative": "It will show a blank screen.", "id": 833, "question_id": 163}, {"is_correct": false, "alternative": "It will show an error message.", "id": 834, "question_id": 163}], "created_at": {"$date": 1401225210000}, "question": "What will be the output of the following code snippet?\r\n[code]\r\n<?php\r\n$my_array = array(1 => 'a', 2 => 'b');\r\nprint_r($my_array);\r\n?>\r\n[/code]\r\n", "id": 163, "id_google": 1180, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "1", "id": 835, "question_id": 164}, {"is_correct": false, "alternative": "2", "id": 836, "question_id": 164}, {"is_correct": false, "alternative": "0", "id": 837, "question_id": 164}, {"is_correct": false, "alternative": "The script will throw an error message.", "id": 838, "question_id": 164}], "created_at": {"$date": 1401225312000}, "question": "What will be the output of the following PHP code snippet?\r\n[code]\r\n<?php\r\n$array = array (1.1 => '1', 1.2 => '1');\r\necho count ($array);\r\n?>\r\n[/code]", "id": 164, "id_google": 1181, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "$_POST[]", "id": 839, "question_id": 165}, {"is_correct": false, "alternative": "$_GET[]", "id": 840, "question_id": 165}, {"is_correct": true, "alternative": "$_REQUEST[]", "id": 841, "question_id": 165}, {"is_correct": false, "alternative": "$_SEND[]", "id": 842, "question_id": 165}], "created_at": {"$date": 1401225338000}, "question": "In which of the following ways will you send data from a Web page if you do not know how data is sent?", "id": 165, "id_google": 1191, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": true, "alternative": "Hello PHP", "id": 843, "question_id": 166}, {"is_correct": false, "alternative": "0", "id": 844, "question_id": 166}, {"is_correct": false, "alternative": "Null", "id": 845, "question_id": 166}, {"is_correct": false, "alternative": "The PHP script will show an error message.", "id": 846, "question_id": 166}], "created_at": {"$date": 1401225448000}, "question": "What will be the output of the following script?\r\n[code]\r\n<?php\r\nclass foo {\r\n    const BAR = \"Hello PHP\"; \r\n}\r\necho foo::BAR;\r\n?>\r\n[/code]", "id": 166, "id_google": 1173, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": true, "alternative": "echo $child->getName() . \": \" . $child . \"<br />\";", "id": 847, "question_id": 167}, {"is_correct": false, "alternative": "echo $child->getNamespaces() . \": \" . $child . \"<br />\";", "id": 848, "question_id": 167}, {"is_correct": false, "alternative": "echo $child->getDocNamespaces() . \": \" . $child . \"<br />\";", "id": 849, "question_id": 167}, {"is_correct": false, "alternative": "echo $child->asXML() . \": \" . $child . \"<br />\";", "id": 850, "question_id": 167}], "created_at": {"$date": 1401225699000}, "question": "You have been given the following PHP script:\r\n[code]\r\n<?php\r\n$xmlstring = <<<XML\r\n<?xml version=\u201c1.0\u201d encoding=\u201cISO-8859-1\u201d?>\r\n<email>\r\n<to>je...@ucertify.com</to>\r\n<from>jo...@ucertify.com</from>\r\n<heading>Technical issue in Linux OS</heading>\r\n<body>There is a technical issue in my Linux system. Please Fix it. </body> </email>\r\nXML;\r\n$xml = new SimpleXMLElement($xmlstring);\r\nforeach($xml->children() as $child) {\r\n    <Insert code here.>\r\n}\r\n[/code]\r\nWhich of the following code snippets will you insert at blank space to get the following output?\r\n\r\nto: je...@ucertify.com\r\nfrom: jo...@ucertify.com\r\nheading: Technical issue in Linux OS\r\nbody: There is a technical issue in my Linux system. please Fix it.", "id": 167, "id_google": 1175, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": false, "alternative": "True", "id": 851, "question_id": 168}, {"is_correct": true, "alternative": "False", "id": 852, "question_id": 168}], "created_at": {"$date": 1401225750000}, "question": "Identify whether the given statement is true or false.\r\nAll group functions except COUNT (*) and GROUPING ignore NULL values.", "id": 168, "id_google": 1196, "answer": "", "type_question": 1}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "explode()", "id": 853, "question_id": 169}, {"is_correct": true, "alternative": "preg_split()", "id": 854, "question_id": 169}, {"is_correct": false, "alternative": "implode()", "id": 855, "question_id": 169}, {"is_correct": false, "alternative": "strstr()", "id": 856, "question_id": 169}], "created_at": {"$date": 1401225802000}, "question": "Which of the following functions will you use to break a string into an array based on a specific pattern?", "id": 169, "id_google": 1185, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": false, "alternative": " LEFT OUTER JOIN ", "id": 857, "question_id": 170}, {"is_correct": false, "alternative": "CROSS JOIN ", "id": 858, "question_id": 170}, {"is_correct": false, "alternative": "RIGHT OUTER JOIN ", "id": 859, "question_id": 170}, {"is_correct": true, "alternative": "FULL OUTER JOIN ", "id": 860, "question_id": 170}], "created_at": {"$date": 1401225871000}, "question": "You work as a Database Administrator for Dolliver Inc. The company uses an Oracle database. The database contains two tables, named Employees and Departments. You want to retrieve all matched and unmatched rows from both the tables. Which of the following types of joins will you use to accomplish this? ", "id": 170, "id_google": 1195, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 2, "alternatives": [{"is_correct": true, "alternative": "strcasecmp()", "id": 865, "question_id": 171}, {"is_correct": false, "alternative": "strcmp()", "id": 866, "question_id": 171}, {"is_correct": false, "alternative": "strstr()", "id": 867, "question_id": 171}, {"is_correct": false, "alternative": "substr()", "id": 868, "question_id": 171}], "created_at": {"$date": 1401225973000}, "question": "Which of the following functions can be used to compare two strings using a case-insensitive binary algorithm?", "id": 171, "id_google": 118, "answer": "", "type_question": 1}, {"comment": "", "id_category": 7, "alternatives": [{"is_correct": false, "alternative": "Cross join", "id": 869, "question_id": 172}, {"is_correct": false, "alternative": "Equijoin", "id": 870, "question_id": 172}, {"is_correct": true, "alternative": "Self join", "id": 871, "question_id": 172}, {"is_correct": false, "alternative": "Outer join", "id": 872, "question_id": 172}], "created_at": {"$date": 1401226071000}, "question": "Symonds works as a Database Administrator for Blue Well Inc. The company uses an Oracle database. The database contains a table named Employees. Following is the structure of the table:\r\n\r\nEmployeeID NUMBER (5) PRIMARY KEY\r\nEmployeeName VARCHAR2 (35) NOT NULL\r\nSalary NUMBER (9, 2) NOT NULL\r\nCommission NUMBER (4, 2)\r\nDepartmentID NUMBER (5)\r\n\r\nSymonds queries the Employees table with the following statement:\r\nSELECT e.EmployeeName, m.Salary\r\nFROM Employees e, Employees m\r\nWHERE e.EmployeeID = m.EmployeeID;\r\n\r\nWhich of the following types of joins is used in the statement?\r\n", "id": 172, "id_google": 1193, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "setrawcookie()", "id": 873, "question_id": 173}, {"is_correct": false, "alternative": "setcookie()", "id": 874, "question_id": 173}, {"is_correct": false, "alternative": "headers_sent()", "id": 875, "question_id": 173}, {"is_correct": false, "alternative": "headers_list()", "id": 876, "question_id": 173}], "created_at": {"$date": 1401226156000}, "question": "You want to send an HTTP cookie without URL encoding the cookie value. Which of the following functions will you use?", "id": 173, "id_google": 1189, "answer": "", "type_question": 1}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": true, "alternative": "6", "id": 877, "question_id": 174}, {"is_correct": false, "alternative": "12345", "id": 878, "question_id": 174}, {"is_correct": false, "alternative": "123445", "id": 879, "question_id": 174}, {"is_correct": false, "alternative": "abcdef", "id": 880, "question_id": 174}], "created_at": {"$date": 1401226320000}, "question": "What will be the output of the following code snippet?\r\n[code]\r\n<?php\r\n$string = '133445abcdef';\r\n$mask = '12345';\r\necho strspn ($string, $mask);\r\n?>\r\n[/code]", "id": 174, "id_google": 1186, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": "While loop", "id": 881, "question_id": 175}, {"is_correct": true, "alternative": "For loop", "id": 882, "question_id": 175}, {"is_correct": false, "alternative": "Do while loop", "id": 883, "question_id": 175}, {"is_correct": false, "alternative": "For each loop", "id": 884, "question_id": 175}], "created_at": {"$date": 1401226415000}, "question": "You have been given a code snippet as follows:\r\n[code]\r\n$somearray = array(\u201chi\u201d, \u201cthis is a string\u201d, \u201cthis is a code\u201d);\r\n[/code]\r\nYou want to iterate this array and modify the value of each of its elements. Which of the following ways will you use to accomplish the task?", "id": 175, "id_google": 1177, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": true, "alternative": "header(\"Location: http://php.com\");", "id": 885, "question_id": 176}, {"is_correct": false, "alternative": "redirect(\"Location: http://php.com\");", "id": 886, "question_id": 176}, {"is_correct": false, "alternative": "header(\"http://php.com\");", "id": 887, "question_id": 176}, {"is_correct": false, "alternative": "redirect(\"http://php.com\");", "id": 888, "question_id": 176}], "created_at": {"$date": 1401226468000}, "question": "Which of the following code snippets will you use to redirect your users from one page to another?", "id": 176, "id_google": 1187, "answer": "", "type_question": 1}, {"comment": "", "id_category": 2, "alternatives": [{"is_correct": false, "alternative": "setlocate()", "id": 889, "question_id": 177}, {"is_correct": false, "alternative": "strtr()", "id": 890, "question_id": 177}, {"is_correct": true, "alternative": "substr()", "id": 891, "question_id": 177}, {"is_correct": false, "alternative": "slocate()", "id": 892, "question_id": 177}], "created_at": {"$date": 1401227763000}, "question": "Which of the following functions allows you to extract a substring from a larger string?", "id": 177, "id_google": 1169, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "shuffle()", "id": 893, "question_id": 178}, {"is_correct": false, "alternative": "rand()", "id": 894, "question_id": 178}, {"is_correct": false, "alternative": "array_shuffle()", "id": 895, "question_id": 178}, {"is_correct": false, "alternative": "array_rand()", "id": 896, "question_id": 178}], "created_at": {"$date": 1401227835000}, "question": "Which of the following functions randomizes the order of the elements of the array every time it is called?", "id": 178, "id_google": 1167, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": "is_key_set()", "id": 897, "question_id": 179}, {"is_correct": false, "alternative": "unset()", "id": 898, "question_id": 179}, {"is_correct": false, "alternative": "is_set()", "id": 899, "question_id": 179}, {"is_correct": true, "alternative": "array_key_exists()", "id": 900, "question_id": 179}], "created_at": {"$date": 1401227904000}, "question": "Which of the following functions can be used to determine whether an array element exists?\r\n", "id": 179, "id_google": 1166, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": true, "alternative": "Array ( [0] => 1 [1] => 2 [2] => 3 )", "id": 901, "question_id": 180}, {"is_correct": false, "alternative": "Array ( [0] => 4 [1] => 8 [2] => 12 )", "id": 902, "question_id": 180}, {"is_correct": false, "alternative": "Array ( [0] => 1 [4] => 2 [8] => 3 )", "id": 903, "question_id": 180}, {"is_correct": false, "alternative": "The script will throw an error message.", "id": 904, "question_id": 180}], "created_at": {"$date": 1401227982000}, "question": "You have been given the following PHP code snippet:\r\n[code]\r\n<?php\r\n$array = array ('1', '2', '3');\r\nforeach ($array as $key => $value) {\r\n$value = 4;\r\n}\r\nprint_r($array);\r\n?>\r\n[/code]\r\nWhat will be the output?", "id": 180, "id_google": 1179, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": false, "alternative": " It evaluates to true if the two operands are equivalent.", "id": 905, "question_id": 181}, {"is_correct": true, "alternative": "It evaluates to true only if the operands are of the same data type and have the same value.", "id": 906, "question_id": 181}, {"is_correct": false, "alternative": "If the two values are strings, it performs a lexical comparison.", "id": 907, "question_id": 181}, {"is_correct": false, "alternative": "It is an alias of strcmp() function.", "id": 908, "question_id": 181}], "created_at": {"$date": 1401228088000}, "question": "In which of the following ways does the identity operator === compare two values?", "id": 181, "id_google": 1178, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "$_GET", "id": 909, "question_id": 182}, {"is_correct": false, "alternative": "$_PUT", "id": 910, "question_id": 182}, {"is_correct": true, "alternative": "$_SESSION", "id": 911, "question_id": 182}, {"is_correct": false, "alternative": "$_SET", "id": 912, "question_id": 182}], "created_at": {"$date": 1401298339000}, "question": "Which of the following holds session variables?", "id": 182, "id_google": 1171, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "obj", "id": 913, "question_id": 183}, {"is_correct": true, "alternative": "new", "id": 914, "question_id": 183}, {"is_correct": false, "alternative": "new_obj", "id": 915, "question_id": 183}, {"is_correct": false, "alternative": "newObj", "id": 916, "question_id": 183}], "created_at": {"$date": 1401298384000}, "question": "Which of following is a construct that you will use to instantiate an object?", "id": 183, "id_google": 1172, "answer": "", "type_question": 1}, {"comment": "", "id_category": 6, "alternatives": [{"is_correct": true, "alternative": "$xml = simplexml_load_string($string); print_r($xml);", "id": 917, "question_id": 184}, {"is_correct": false, "alternative": "$xml = load_XML($string); print_r($xml);", "id": 918, "question_id": 184}, {"is_correct": false, "alternative": "$xml = XML_string($string); print_r($xml);", "id": 919, "question_id": 184}, {"is_correct": false, "alternative": "$xml = simplexml_string($string); print_r($xml);", "id": 920, "question_id": 184}], "created_at": {"$date": 1401298462000}, "question": "You have been given the following code snippet:\r\n[/code]\r\n<?php\r\n$string = <<<XML\r\n<?xml version=\u201c1.0\u201d encoding=\u201cISO-8859-1\u201d?>\r\n<email>\r\n<to>je...@ucertify.com</to>\r\n<from>jo...@ucertify.com</from>\r\n<heading>Technical issue in Linux OS</heading>\r\n<body>There is a technical issue in my Linux system. Please Fix it. </body>\r\n</email>\r\nXML;\r\n<Write code here>\r\n?>\r\n[/code]\r\nWhich of the following code snippets will you write to print the XML content?\r\n", "id": 184, "id_google": 1188, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "__autoload()", "id": 921, "question_id": 185}, {"is_correct": false, "alternative": "__lazyload()", "id": 922, "question_id": 185}, {"is_correct": false, "alternative": "load()", "id": 923, "question_id": 185}, {"is_correct": false, "alternative": "auto_load()", "id": 924, "question_id": 185}], "created_at": {"$date": 1401304983000}, "question": "Which of the following is a function that can be used to remove the issue of lazy loading?\r\n", "id": 185, "id_google": 1174, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [], "created_at": {"$date": 1401305031000}, "question": "Fill in the blank with the appropriate word.\r\nThe _________ function is used to encode a URL.", "id": 186, "id_google": 1192, "answer": "urlencode", "type_question": 2}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": true, "alternative": "You can use print() as part of an expression while you cannot use echo().", "id": 925, "question_id": 187}, {"is_correct": false, "alternative": "You can use print() to print numbers while you cannot use echo for this.", "id": 926, "question_id": 187}, {"is_correct": false, "alternative": "You cannot use echo() with bitwise operators but you can use print() for this.", "id": 927, "question_id": 187}, {"is_correct": false, "alternative": "There is no difference between echo() and print() functions.", "id": 928, "question_id": 187}], "created_at": {"$date": 1401305100000}, "question": "Which of the following statements explains the difference between print() and echo()?", "id": 187, "id_google": 1176, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "strtr()", "id": 929, "question_id": 188}, {"is_correct": true, "alternative": "strspn()", "id": 930, "question_id": 188}, {"is_correct": false, "alternative": "str_match()", "id": 931, "question_id": 188}, {"is_correct": false, "alternative": "substr_replace()", "id": 932, "question_id": 188}], "created_at": {"$date": 1401305817000}, "question": "Which of the following functions can be used to match a string against a whitelist mask of allowed characters?", "id": 188, "id_google": 1168, "answer": "", "type_question": 1}, {"comment": "", "id_category": 9, "alternatives": [{"is_correct": false, "alternative": "3", "id": 933, "question_id": 189}, {"is_correct": false, "alternative": "4", "id": 934, "question_id": 189}, {"is_correct": true, "alternative": "5", "id": 935, "question_id": 189}, {"is_correct": false, "alternative": "6", "id": 936, "question_id": 189}], "created_at": {"$date": 1401306073000}, "question": "How many times is the loop function called in this script ? (choose 1)\r\n[code]\r\n<?php\r\nfunction loop($a, &$b) {\r\n    if ($a <= $b) {\r\n        return;\r\n    }\r\n    loop($a--, ++$b);\r\n}\r\n$a = 5;\r\n$b = 1;\r\nloop($a++, $b);\r\n[/code]\r\n", "id": 189, "id_google": 1165, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [], "created_at": {"$date": 1401379208000}, "question": "What is the output of this code?\r\n\r\n<?php\r\nnamespace myApp\\db; \r\nclass mysql {} \r\n\r\necho get_class(new __NAMESPACE__ . '\\mysql'); \r\necho get_class(new namespace\\mysql());", "id": 190, "id_google": 1164, "answer": "Parser error", "type_question": 2}, {"comment": "", "id_category": 3, "alternatives": [], "created_at": {"$date": 1401379641000}, "question": "What is the output of this code?\r\n[code]\r\n<?php\r\nnamespace myApp\\db; \r\nclass mysql {} \r\n\r\necho get_class(new namespace\\mysql());\r\n[/code]", "id": 191, "id_google": 1164, "answer": "myApp\\db\\mysql", "type_question": 2}, {"comment": "", "id_category": 3, "alternatives": [], "created_at": {"$date": 1401379994000}, "question": "We suppose that the extension Opcache is enabled. Which function would you use to reset the entire opcode cache?", "id": 192, "id_google": 1162, "answer": "opcache_reset", "type_question": 2}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": true, "alternative": "avoid use of long class and function names", "id": 937, "question_id": 193}, {"is_correct": false, "alternative": "avoid use of long variable names", "id": 938, "question_id": 193}, {"is_correct": false, "alternative": "permit to have a file with all of your classes (better optimization)", "id": 939, "question_id": 193}, {"is_correct": true, "alternative": "avoid conflicts between libraries regarding the name of elements", "id": 940, "question_id": 193}, {"is_correct": false, "alternative": "namespaces don't exist in PHP", "id": 941, "question_id": 193}], "created_at": {"$date": 1401380193000}, "question": "What are the main roles of the namespaces?", "id": 193, "id_google": 1163, "answer": "", "type_question": 3}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "By default, the garbage collection is disabled and needs to be activated with the gc_enable() function", "id": 942, "question_id": 194}, {"is_correct": true, "alternative": "A new algorithm has been implemented in PHP 5.3 to improve the detection of memory leaks", "id": 943, "question_id": 194}, {"is_correct": false, "alternative": "When activating, the garbage collection is launched when the root buffer contains 5,000 possible roots", "id": 944, "question_id": 194}, {"is_correct": false, "alternative": "The number of possible roots in the root buffer can be modified with the directive gc_fullsize in the php.ini", "id": 945, "question_id": 194}, {"is_correct": true, "alternative": "The garbage collection can be activated with the gc_enable() function and deactivated with the gc_disable() function", "id": 946, "question_id": 194}], "created_at": {"$date": 1401381200000}, "question": "Which of the following statements are true regarding the garbage collection?", "id": 194, "id_google": 1161, "answer": "", "type_question": 3}, {"comment": "", "id_category": 8, "alternatives": [{"is_correct": true, "alternative": "The second parameter is secure. No protection is required.", "id": 947, "question_id": 195}, {"is_correct": false, "alternative": " Escape the ' and \"", "id": 948, "question_id": 195}, {"is_correct": false, "alternative": "Escape the CRLF character \\r\\n", "id": 949, "question_id": 195}, {"is_correct": false, "alternative": "Cast in boolean", "id": 950, "question_id": 195}, {"is_correct": false, "alternative": "None of the above", "id": 951, "question_id": 195}], "created_at": {"$date": 1401381531000}, "question": "Which protection should you use to filter the second parameter of the function mail() to prevent email injection?\r\n", "id": 195, "id_google": 1159, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "It isn't possible", "id": 952, "question_id": 196}, {"is_correct": false, "alternative": "use myTrait as private will automatically use all of the method do trait in private", "id": 953, "question_id": 196}, {"is_correct": false, "alternative": "private use myTrait will automatically use all of the method do trait in private", "id": 954, "question_id": 196}, {"is_correct": true, "alternative": "use myTrait { myMethod as private myPrivateMethod; }", "id": 955, "question_id": 196}], "created_at": {"$date": 1401383616000}, "question": "How can you restrict the scope of a trait's method when using it in a class?", "id": 196, "id_google": 1158, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": true, "alternative": "ExceptionMyException", "id": 956, "question_id": 197}, {"is_correct": false, "alternative": "MyExceptionMyException", "id": 957, "question_id": 197}, {"is_correct": false, "alternative": "ExceptionException", "id": 958, "question_id": 197}, {"is_correct": false, "alternative": "MyException", "id": 959, "question_id": 197}, {"is_correct": false, "alternative": "E_FATAL", "id": 960, "question_id": 197}], "created_at": {"$date": 1401383904000}, "question": "What is the output of the following code?\r\n[code]\r\n<?php\r\ntry {\r\n    class MyException extends Exception {}\r\n    try {\r\n        throw new MyException('Erreur');\r\n    } catch (Exception $e) {\r\n        echo 'Exception';\r\n        throw $e;\r\n    } catch (MyException $e) {\r\n        echo 'MyException';\r\n        throw $e;\r\n    }\r\n} catch (MyException $e) {\r\n    echo get_class($e);\r\n}\r\n[/code]", "id": 197, "id_google": 1157, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "0", "id": 961, "question_id": 198}, {"is_correct": false, "alternative": "1", "id": 962, "question_id": 198}, {"is_correct": true, "alternative": "2", "id": 963, "question_id": 198}, {"is_correct": false, "alternative": "Error : Class A can't access to $num property", "id": 964, "question_id": 198}, {"is_correct": false, "alternative": "null", "id": 965, "question_id": 198}], "created_at": {"$date": 1401385723000}, "question": "What is the value of the variable $numFinal?\r\n[code]\r\ntrait increment {\r\n\tprivate $num = 0;\r\n\tpublic function increment() {\r\n\t\t$this->num++;\r\n\t}\r\n\r\n\tpublic function getNum() {\r\n\t\treturn $this->num;\r\n\t}\r\n}\r\n\r\nclass A {\r\n\tuse increment;\r\n\tpublic function increment2x(){\r\n\t\t$this->increment();\r\n\t\t$this->num++;\r\n\t}\r\n}\r\n\r\n$a = new A();\r\n$a->increment2x();\r\n$numFinal = $a->getNum();\r\n[/code]", "id": 198, "id_google": 1154, "answer": "", "type_question": 1}, {"comment": "", "id_category": 5, "alternatives": [{"is_correct": false, "alternative": "to set the default stream wrapper to be used when no scheme is passed (ex. : ftp://)", "id": 966, "question_id": 199}, {"is_correct": false, "alternative": "to set the default stream, when it isn't specified, to which data will be written to", "id": 967, "question_id": 199}, {"is_correct": false, "alternative": "to specified the default stream context options, only for use with the stream_create_context() function", "id": 968, "question_id": 199}, {"is_correct": true, "alternative": "to set the default stream context options for all file operations called without a context parameter", "id": 969, "question_id": 199}, {"is_correct": false, "alternative": " None of the above", "id": 970, "question_id": 199}], "created_at": {"$date": 1401385897000}, "question": "For what do you use the function stream_context_set_default()?", "id": 199, "id_google": 1155, "answer": "", "type_question": 1}, {"comment": "", "id_category": 8, "alternatives": [{"is_correct": false, "alternative": "echo $_POST['source'];", "id": 971, "question_id": 200}, {"is_correct": true, "alternative": "echo htmlentities($_POST['source'], ENT_QUOTES, 'UTF-8');", "id": 972, "question_id": 200}, {"is_correct": false, "alternative": "echo strip_tags($_POST['source']);", "id": 973, "question_id": 200}, {"is_correct": false, "alternative": "echo utf8_encode($_POST['source']);", "id": 974, "question_id": 200}, {"is_correct": false, "alternative": "echo secure_string($_POST['source']);", "id": 975, "question_id": 200}], "created_at": {"$date": 1401386350000}, "question": " Users can enter sample source code on your site. How can you secure the data entered (php, html, css) and display raw source code?", "id": 200, "id_google": 1156, "answer": "", "type_question": 1}, {"comment": "", "id_category": 3, "alternatives": [{"is_correct": false, "alternative": "I see 0x4A ghosts in 063 houses.", "id": 976, "question_id": 201}, {"is_correct": false, "alternative": "I see 74 ghosts in 63 houses.", "id": 977, "question_id": 201}, {"is_correct": true, "alternative": " I see 74 ghosts in 51 houses.", "id": 978, "question_id": 201}, {"is_correct": false, "alternative": "I see 74 ghosts in 063 houses.", "id": 979, "question_id": 201}], "created_at": {"$date": 1401386431000}, "question": "What is the output of the following code? \r\n[code]\r\n$number = 0x4A;\r\n$number2 = 063;\r\necho \"I see \" . $number . \" ghosts in \" . $number2 . \" houses.\";\r\n[/code]", "id": 201, "id_google": 1153, "answer": "", "type_question": 1}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "myConst", "id": 980, "question_id": 202}, {"is_correct": true, "alternative": "5", "id": 981, "question_id": 202}, {"is_correct": false, "alternative": "null", "id": 982, "question_id": 202}, {"is_correct": false, "alternative": "none of the above", "id": 983, "question_id": 202}], "created_at": {"$date": 1401401284000}, "question": "What are the value of the variable $var?\r\n[code]\r\ndefine('myConst', 5);\r\n\r\nclass A {\r\n    const myConst = myConst;\r\n}\r\n\r\nclass B {\r\n   public function test() {\r\n      $var = A::myConst;\r\n      return $var;\r\n   }\r\n}\r\n[/code]", "id": 202, "id_google": 1148, "answer": "", "type_question": 1}, {"comment": " ", "id_category": 8, "alternatives": [], "created_at": {"$date": 1401401555000}, "question": "Which boolean value is returned by the function password_needs_rehash() in this code?\r\n[code]\r\n<?php\r\n$sHash = password_hash('Be a php hero !', PASSWORD_DEFAULT, array( \r\n  'cost' => 11\r\n));\r\n\r\n$bNeeded = password_needs_rehash($sHash, PASSWORD_DEFAULT, array( \r\n  'cost' => 11\r\n));\r\n[/code]", "id": 203, "id_google": 1152, "answer": "false", "type_question": 2}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": true, "alternative": "A derived classes may implement one or more interfaces", "id": 984, "question_id": 204}, {"is_correct": false, "alternative": "A class can implement multiple interfaces and extends multiple classes", "id": 985, "question_id": 204}, {"is_correct": true, "alternative": "A interface can implement others interfaces", "id": 986, "question_id": 204}, {"is_correct": false, "alternative": "A interface may have methods privates", "id": 987, "question_id": 204}, {"is_correct": true, "alternative": "A classe can't implement different interfaces which include a method name in common", "id": 988, "question_id": 204}], "created_at": {"$date": 1401402010000}, "question": "Which of the following affirmations are correct regarding the classes and interfaces? ", "id": 204, "id_google": 1150, "answer": "", "type_question": 3}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "20X.X", "id": 989, "question_id": 205}, {"is_correct": true, "alternative": "30X.X", "id": 990, "question_id": 205}, {"is_correct": false, "alternative": "40X.X", "id": 991, "question_id": 205}, {"is_correct": false, "alternative": "50X.X", "id": 992, "question_id": 205}], "created_at": {"$date": 1401402062000}, "question": "Which HTTP codes identify a redirection?", "id": 205, "id_google": 1151, "answer": "", "type_question": 1}, {"comment": "", "id_category": 8, "alternatives": [{"is_correct": false, "alternative": "the function password_hash is an alias of the function crypt()", "id": 993, "question_id": 206}, {"is_correct": true, "alternative": "the password hashing API provides a wrapper around the function crypt()", "id": 994, "question_id": 206}, {"is_correct": false, "alternative": "the password hashing API provides constants to create password hashes using SHA1 and MD5 ", "id": 995, "question_id": 206}, {"is_correct": true, "alternative": "the constant PASSWORD_DEFAULT may change in future PHP version that why it's recommended to store the resulting hash in more than 60 characters", "id": 996, "question_id": 206}], "created_at": {"$date": 1401402326000}, "question": "Which of the following affirmations are correct regarding password hashing API?", "id": 206, "id_google": 1149, "answer": "", "type_question": 3}, {"comment": "", "id_category": 4, "alternatives": [{"is_correct": false, "alternative": "105", "id": 997, "question_id": 207}, {"is_correct": false, "alternative": "55", "id": 998, "question_id": 207}, {"is_correct": false, "alternative": "105105", "id": 999, "question_id": 207}, {"is_correct": false, "alternative": "1010", "id": 1000, "question_id": 207}, {"is_correct": true, "alternative": "10101010", "id": 1001, "question_id": 207}], "created_at": {"$date": 1401402553000}, "question": "What is the ouput of the following code?\r\n[code]\r\n<?php\r\nclass A {\r\n    public $c = 5;\r\n\r\n    public function a() {\r\n        echo $this->c;\r\n    }\r\n}\r\n\r\nclass B extends A {\r\n    public $c = 10;\r\n\r\n    public function b() {\r\n        echo $this->c . $this->a();\r\n    }\r\n}\r\n\r\n$obj = new b();\r\n$obj->b();\r\n[/code]\r\n", "id": 207, "id_google": 1147, "answer": "", "type_question": 1}, {"comment": "", "id_category": 1, "alternatives": [{"is_correct": false, "alternative": " size()", "id": 1002, "question_id": 208}, {"is_correct": true, "alternative": "count()", "id": 1003, "question_id": 208}, {"is_correct": false, "alternative": "length()", "id": 1004, "question_id": 208}, {"is_correct": false, "alternative": "get_size()", "id": 1005, "question_id": 208}], "created_at": {"$date": 1401402929000}, "question": "Which of the following is a PHP function that can be used to retrieve the size of a given array?\r\n", "id": 208, "id_google": 1139, "answer": "", "type_question": 1}, {"comment": "", "id_category": 10, "alternatives": [{"is_correct": false, "alternative": "$_POST['map']['x'] & $_POST['map']['y']", "id": 1006, "question_id": 209}, {"is_correct": true, "alternative": "$_POST['map_x'] & $_POST['map_y']", "id": 1007, "question_id": 209}, {"is_correct": false, "alternative": "$_POST['map_coord_x'] & $_POST['map_coord_y']", "id": 1008, "question_id": 209}, {"is_correct": false, "alternative": "None of the above", "id": 1009, "question_id": 209}], "created_at": {"$date": 1401404336000}, "question": "How do you retrieve the coordinates of the mouse click on the image button from the form above when submitting?\r\n\r\n<form action=\"form.php\" method=\"post\">\r\n  <input type=\"image\" src=\"image.png\" name=\"map\" value=\"my map\" />\r\n...\r\n</form>\r\n", "id": 209, "id_google": 1123, "answer": "", "type_question": 1}]